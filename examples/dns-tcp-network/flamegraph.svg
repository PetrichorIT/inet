<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="662" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="645.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="645.00"> </text><svg id="frames" x="10" width="1180" total_samples="399"><g><title>dns-tcp-network`des::net::module::api::set_setup_fn (1 samples, 0.25%)</title><rect x="0.0000%" y="517" width="0.2506%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="527.50"></text></g><g><title>dns-tcp-network`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;des::net::plugin::registry::PluginEntry&gt;&gt; (2 samples, 0.50%)</title><rect x="0.2506%" y="405" width="0.5013%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.5006%" y="415.50"></text></g><g><title>dns-tcp-network`core::ptr::drop_in_place&lt;inet::plugin::IOPlugin&gt; (2 samples, 0.50%)</title><rect x="0.2506%" y="389" width="0.5013%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="2"/><text x="0.5006%" y="399.50"></text></g><g><title>dns-tcp-network`core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;inet::ctx::IOContext&gt;&gt;&gt; (2 samples, 0.50%)</title><rect x="0.2506%" y="373" width="0.5013%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.5006%" y="383.50"></text></g><g><title>dns-tcp-network`inet::libpcap::close (2 samples, 0.50%)</title><rect x="0.2506%" y="357" width="0.5013%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="2"/><text x="0.5006%" y="367.50"></text></g><g><title>dns-tcp-network`alloc::vec::Vec&lt;T,A&gt;::retain (2 samples, 0.50%)</title><rect x="0.2506%" y="341" width="0.5013%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="2"/><text x="0.5006%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`close (2 samples, 0.50%)</title><rect x="0.2506%" y="325" width="0.5013%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="2"/><text x="0.5006%" y="335.50"></text></g><g><title>dns-tcp-network`core::ptr::drop_in_place&lt;des::ndl::NdlApplication&gt; (3 samples, 0.75%)</title><rect x="0.2506%" y="501" width="0.7519%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="3"/><text x="0.5006%" y="511.50"></text></g><g><title>dns-tcp-network`alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.75%)</title><rect x="0.2506%" y="485" width="0.7519%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="3"/><text x="0.5006%" y="495.50"></text></g><g><title>dns-tcp-network`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.75%)</title><rect x="0.2506%" y="469" width="0.7519%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="3"/><text x="0.5006%" y="479.50"></text></g><g><title>dns-tcp-network`alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.75%)</title><rect x="0.2506%" y="453" width="0.7519%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="3"/><text x="0.5006%" y="463.50"></text></g><g><title>dns-tcp-network`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.75%)</title><rect x="0.2506%" y="437" width="0.7519%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="3"/><text x="0.5006%" y="447.50"></text></g><g><title>dns-tcp-network`alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.75%)</title><rect x="0.2506%" y="421" width="0.7519%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="3"/><text x="0.5006%" y="431.50"></text></g><g><title>dns-tcp-network`core::ptr::drop_in_place&lt;des::sync::rwlock::RwLock&lt;des::net::module::ext::core::AsyncCoreExt&gt;&gt; (1 samples, 0.25%)</title><rect x="0.7519%" y="405" width="0.2506%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="1.0019%" y="415.50"></text></g><g><title>dns-tcp-network`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.25%)</title><rect x="0.7519%" y="389" width="0.2506%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="1.0019%" y="399.50"></text></g><g><title>dns-tcp-network`&lt;tokio::runtime::runtime::Runtime as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="0.7519%" y="373" width="0.2506%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="1.0019%" y="383.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::CurrentThread::shutdown (1 samples, 0.25%)</title><rect x="0.7519%" y="357" width="0.2506%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="1.0019%" y="367.50"></text></g><g><title>dns-tcp-network`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.25%)</title><rect x="0.7519%" y="341" width="0.2506%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="1.0019%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.25%)</title><rect x="0.7519%" y="325" width="0.2506%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="1.0019%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (1 samples, 0.25%)</title><rect x="0.7519%" y="309" width="0.2506%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="1.0019%" y="319.50"></text></g><g><title>dns-tcp-network`&lt;des_ndl::ast::expr::items::File as des_ndl::ast::parse::Parse&gt;::parse (1 samples, 0.25%)</title><rect x="1.0025%" y="453" width="0.2506%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="1"/><text x="1.2525%" y="463.50"></text></g><g><title>dns-tcp-network`&lt;des_ndl::ast::expr::items::Item as des_ndl::ast::parse::Parse&gt;::parse (1 samples, 0.25%)</title><rect x="1.0025%" y="437" width="0.2506%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="1"/><text x="1.2525%" y="447.50"></text></g><g><title>dns-tcp-network`&lt;des_ndl::ast::expr::module::ModuleStmt as des_ndl::ast::parse::Parse&gt;::parse (1 samples, 0.25%)</title><rect x="1.0025%" y="421" width="0.2506%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="1"/><text x="1.2525%" y="431.50"></text></g><g><title>dns-tcp-network`&lt;des_ndl::ast::expr::common::Colon as des_ndl::ast::parse::Parse&gt;::parse (1 samples, 0.25%)</title><rect x="1.0025%" y="405" width="0.2506%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="1"/><text x="1.2525%" y="415.50"></text></g><g><title>dns-tcp-network`alloc::fmt::format::format_inner (1 samples, 0.25%)</title><rect x="1.0025%" y="389" width="0.2506%" height="15" fill="rgb(241,131,45)" fg:x="4" fg:w="1"/><text x="1.2525%" y="399.50"></text></g><g><title>dns-tcp-network`&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.25%)</title><rect x="1.0025%" y="373" width="0.2506%" height="15" fill="rgb(249,31,29)" fg:x="4" fg:w="1"/><text x="1.2525%" y="383.50"></text></g><g><title>dns-tcp-network`des::ndl::NdlApplication::new (2 samples, 0.50%)</title><rect x="1.0025%" y="501" width="0.5013%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="2"/><text x="1.2525%" y="511.50"></text></g><g><title>dns-tcp-network`des_ndl::context::Context::load (2 samples, 0.50%)</title><rect x="1.0025%" y="485" width="0.5013%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="2"/><text x="1.2525%" y="495.50"></text></g><g><title>dns-tcp-network`des_ndl::context::Context::load_initial_tree (2 samples, 0.50%)</title><rect x="1.0025%" y="469" width="0.5013%" height="15" fill="rgb(214,148,48)" fg:x="4" fg:w="2"/><text x="1.2525%" y="479.50"></text></g><g><title>dns-tcp-network`des_ndl::resource::SourceMap::load_file (1 samples, 0.25%)</title><rect x="1.2531%" y="453" width="0.2506%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="1"/><text x="1.5031%" y="463.50"></text></g><g><title>dns-tcp-network`std::io::append_to_string (1 samples, 0.25%)</title><rect x="1.2531%" y="437" width="0.2506%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="1"/><text x="1.5031%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`read (1 samples, 0.25%)</title><rect x="1.2531%" y="421" width="0.2506%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="1"/><text x="1.5031%" y="431.50"></text></g><g><title>dns-tcp-network`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.25%)</title><rect x="1.5038%" y="357" width="0.2506%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="1"/><text x="1.7538%" y="367.50"></text></g><g><title>dns-tcp-network`inet::routing::api::_&lt;impl inet::ctx::IOContext&gt;::set_default_gateway (1 samples, 0.25%)</title><rect x="1.7544%" y="261" width="0.2506%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="2.0044%" y="271.50"></text></g><g><title>dns-tcp-network`&lt;dns_tcp_network::Client as des::net::module::ext::AsyncModule&gt;::at_sim_start::_{{closure}} (2 samples, 0.50%)</title><rect x="1.7544%" y="293" width="0.5013%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="2"/><text x="2.0044%" y="303.50"></text></g><g><title>dns-tcp-network`dns_tcp_network::node_like_setup (2 samples, 0.50%)</title><rect x="1.7544%" y="277" width="0.5013%" height="15" fill="rgb(233,36,39)" fg:x="7" fg:w="2"/><text x="2.0044%" y="287.50"></text></g><g><title>dns-tcp-network`std::fs::File::create (1 samples, 0.25%)</title><rect x="2.0050%" y="261" width="0.2506%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="1"/><text x="2.2550%" y="271.50"></text></g><g><title>dns-tcp-network`std::fs::OpenOptions::_open (1 samples, 0.25%)</title><rect x="2.0050%" y="245" width="0.2506%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="1"/><text x="2.2550%" y="255.50"></text></g><g><title>dns-tcp-network`std::sys::unix::fs::File::open_c (1 samples, 0.25%)</title><rect x="2.0050%" y="229" width="0.2506%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="1"/><text x="2.2550%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.25%)</title><rect x="2.0050%" y="213" width="0.2506%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="1"/><text x="2.2550%" y="223.50"></text></g><g><title>dns-tcp-network`&lt;dns_tcp_network::Dns as des::net::module::ext::AsyncModule&gt;::at_sim_start::_{{closure}} (1 samples, 0.25%)</title><rect x="2.2556%" y="293" width="0.2506%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="1"/><text x="2.5056%" y="303.50"></text></g><g><title>dns-tcp-network`dns_tcp_network::node_like_setup (1 samples, 0.25%)</title><rect x="2.2556%" y="277" width="0.2506%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="1"/><text x="2.5056%" y="287.50"></text></g><g><title>dns-tcp-network`std::fs::File::create (1 samples, 0.25%)</title><rect x="2.2556%" y="261" width="0.2506%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="1"/><text x="2.5056%" y="271.50"></text></g><g><title>dns-tcp-network`std::fs::OpenOptions::_open (1 samples, 0.25%)</title><rect x="2.2556%" y="245" width="0.2506%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="1"/><text x="2.5056%" y="255.50"></text></g><g><title>dns-tcp-network`std::sys::unix::fs::File::open_c (1 samples, 0.25%)</title><rect x="2.2556%" y="229" width="0.2506%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="1"/><text x="2.5056%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.25%)</title><rect x="2.2556%" y="213" width="0.2506%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="1"/><text x="2.5056%" y="223.50"></text></g><g><title>dns-tcp-network`inet::interface::api::add_interface (1 samples, 0.25%)</title><rect x="2.5063%" y="261" width="0.2506%" height="15" fill="rgb(218,138,4)" fg:x="10" fg:w="1"/><text x="2.7563%" y="271.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::failable_api (1 samples, 0.25%)</title><rect x="2.5063%" y="245" width="0.2506%" height="15" fill="rgb(250,191,14)" fg:x="10" fg:w="1"/><text x="2.7563%" y="255.50"></text></g><g><title>dns-tcp-network`inet::arp::table::ArpTable::update (1 samples, 0.25%)</title><rect x="2.5063%" y="229" width="0.2506%" height="15" fill="rgb(239,60,40)" fg:x="10" fg:w="1"/><text x="2.7563%" y="239.50"></text></g><g><title>dns-tcp-network`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.25%)</title><rect x="2.5063%" y="213" width="0.2506%" height="15" fill="rgb(206,27,48)" fg:x="10" fg:w="1"/><text x="2.7563%" y="223.50"></text></g><g><title>dns-tcp-network`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.25%)</title><rect x="2.5063%" y="197" width="0.2506%" height="15" fill="rgb(225,35,8)" fg:x="10" fg:w="1"/><text x="2.7563%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.25%)</title><rect x="2.5063%" y="181" width="0.2506%" height="15" fill="rgb(250,213,24)" fg:x="10" fg:w="1"/><text x="2.7563%" y="191.50"></text></g><g><title>dns-tcp-network`des::net::runtime::events::_&lt;impl des::net::module::reference::ModuleRef&gt;::at_sim_start (6 samples, 1.50%)</title><rect x="1.5038%" y="469" width="1.5038%" height="15" fill="rgb(247,123,22)" fg:x="6" fg:w="6"/><text x="1.7538%" y="479.50"></text></g><g><title>dns-tcp-network`des::net::module::ext::_&lt;impl des::net::module::Module for T&gt;::at_sim_start (6 samples, 1.50%)</title><rect x="1.5038%" y="453" width="1.5038%" height="15" fill="rgb(231,138,38)" fg:x="6" fg:w="6"/><text x="1.7538%" y="463.50"></text></g><g><title>dns-tcp-network`tokio::runtime::runtime::Runtime::block_on (6 samples, 1.50%)</title><rect x="1.5038%" y="437" width="1.5038%" height="15" fill="rgb(231,145,46)" fg:x="6" fg:w="6"/><text x="1.7538%" y="447.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::CurrentThread::block_on (6 samples, 1.50%)</title><rect x="1.5038%" y="421" width="1.5038%" height="15" fill="rgb(251,118,11)" fg:x="6" fg:w="6"/><text x="1.7538%" y="431.50"></text></g><g><title>dns-tcp-network`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (6 samples, 1.50%)</title><rect x="1.5038%" y="405" width="1.5038%" height="15" fill="rgb(217,147,25)" fg:x="6" fg:w="6"/><text x="1.7538%" y="415.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::Context::enter (6 samples, 1.50%)</title><rect x="1.5038%" y="389" width="1.5038%" height="15" fill="rgb(247,81,37)" fg:x="6" fg:w="6"/><text x="1.7538%" y="399.50"></text></g><g><title>dns-tcp-network`&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 1.50%)</title><rect x="1.5038%" y="373" width="1.5038%" height="15" fill="rgb(209,12,38)" fg:x="6" fg:w="6"/><text x="1.7538%" y="383.50"></text></g><g><title>dns-tcp-network`tokio::task::local::LocalSet::tick (5 samples, 1.25%)</title><rect x="1.7544%" y="357" width="1.2531%" height="15" fill="rgb(227,1,9)" fg:x="7" fg:w="5"/><text x="2.0044%" y="367.50"></text></g><g><title>dns-tcp-network`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 1.25%)</title><rect x="1.7544%" y="341" width="1.2531%" height="15" fill="rgb(248,47,43)" fg:x="7" fg:w="5"/><text x="2.0044%" y="351.50"></text></g><g><title>dns-tcp-network`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (5 samples, 1.25%)</title><rect x="1.7544%" y="325" width="1.2531%" height="15" fill="rgb(221,10,30)" fg:x="7" fg:w="5"/><text x="2.0044%" y="335.50"></text></g><g><title>dns-tcp-network`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 1.25%)</title><rect x="1.7544%" y="309" width="1.2531%" height="15" fill="rgb(210,229,1)" fg:x="7" fg:w="5"/><text x="2.0044%" y="319.50"></text></g><g><title>dns-tcp-network`&lt;dns_tcp_network::Server as des::net::module::ext::AsyncModule&gt;::at_sim_start::_{{closure}} (2 samples, 0.50%)</title><rect x="2.5063%" y="293" width="0.5013%" height="15" fill="rgb(222,148,37)" fg:x="10" fg:w="2"/><text x="2.7563%" y="303.50"></text></g><g><title>dns-tcp-network`dns_tcp_network::node_like_setup (2 samples, 0.50%)</title><rect x="2.5063%" y="277" width="0.5013%" height="15" fill="rgb(234,67,33)" fg:x="10" fg:w="2"/><text x="2.7563%" y="287.50"></text></g><g><title>dns-tcp-network`std::fs::File::create (1 samples, 0.25%)</title><rect x="2.7569%" y="261" width="0.2506%" height="15" fill="rgb(247,98,35)" fg:x="11" fg:w="1"/><text x="3.0069%" y="271.50"></text></g><g><title>dns-tcp-network`std::fs::OpenOptions::_open (1 samples, 0.25%)</title><rect x="2.7569%" y="245" width="0.2506%" height="15" fill="rgb(247,138,52)" fg:x="11" fg:w="1"/><text x="3.0069%" y="255.50"></text></g><g><title>dns-tcp-network`std::sys::unix::fs::File::open_c (1 samples, 0.25%)</title><rect x="2.7569%" y="229" width="0.2506%" height="15" fill="rgb(213,79,30)" fg:x="11" fg:w="1"/><text x="3.0069%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.25%)</title><rect x="2.7569%" y="213" width="0.2506%" height="15" fill="rgb(246,177,23)" fg:x="11" fg:w="1"/><text x="3.0069%" y="223.50"></text></g><g><title>dns-tcp-network`&lt;des::net::runtime::NetworkApplicationLifecycle&lt;A&gt; as des::runtime::event::types::EventLifecycle&lt;des::net::runtime::NetworkApplication&lt;A&gt;&gt;&gt;::at_sim_start (7 samples, 1.75%)</title><rect x="1.5038%" y="485" width="1.7544%" height="15" fill="rgb(230,62,27)" fg:x="6" fg:w="7"/><text x="1.7538%" y="495.50"></text></g><g><title>dns-tcp-network`des::net::runtime::events::_&lt;impl des::net::module::reference::ModuleRef&gt;::finish_sim_start (1 samples, 0.25%)</title><rect x="3.0075%" y="469" width="0.2506%" height="15" fill="rgb(216,154,8)" fg:x="12" fg:w="1"/><text x="3.2575%" y="479.50"></text></g><g><title>dns-tcp-network`des::net::module::ext::_&lt;impl des::net::module::Module for T&gt;::finish_sim_start (1 samples, 0.25%)</title><rect x="3.0075%" y="453" width="0.2506%" height="15" fill="rgb(244,35,45)" fg:x="12" fg:w="1"/><text x="3.2575%" y="463.50"></text></g><g><title>dns-tcp-network`tokio::runtime::runtime::Runtime::block_on (1 samples, 0.25%)</title><rect x="3.0075%" y="437" width="0.2506%" height="15" fill="rgb(251,115,12)" fg:x="12" fg:w="1"/><text x="3.2575%" y="447.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::CurrentThread::block_on (1 samples, 0.25%)</title><rect x="3.0075%" y="421" width="0.2506%" height="15" fill="rgb(240,54,50)" fg:x="12" fg:w="1"/><text x="3.2575%" y="431.50"></text></g><g><title>dns-tcp-network`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.25%)</title><rect x="3.0075%" y="405" width="0.2506%" height="15" fill="rgb(233,84,52)" fg:x="12" fg:w="1"/><text x="3.2575%" y="415.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::Context::enter (1 samples, 0.25%)</title><rect x="3.0075%" y="389" width="0.2506%" height="15" fill="rgb(207,117,47)" fg:x="12" fg:w="1"/><text x="3.2575%" y="399.50"></text></g><g><title>dns-tcp-network`&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="3.0075%" y="373" width="0.2506%" height="15" fill="rgb(249,43,39)" fg:x="12" fg:w="1"/><text x="3.2575%" y="383.50"></text></g><g><title>dns-tcp-network`tokio::task::local::LocalSet::tick (1 samples, 0.25%)</title><rect x="3.0075%" y="357" width="0.2506%" height="15" fill="rgb(209,38,44)" fg:x="12" fg:w="1"/><text x="3.2575%" y="367.50"></text></g><g><title>dns-tcp-network`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.25%)</title><rect x="3.0075%" y="341" width="0.2506%" height="15" fill="rgb(236,212,23)" fg:x="12" fg:w="1"/><text x="3.2575%" y="351.50"></text></g><g><title>dns-tcp-network`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.25%)</title><rect x="3.0075%" y="325" width="0.2506%" height="15" fill="rgb(242,79,21)" fg:x="12" fg:w="1"/><text x="3.2575%" y="335.50"></text></g><g><title>dns-tcp-network`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.25%)</title><rect x="3.0075%" y="309" width="0.2506%" height="15" fill="rgb(211,96,35)" fg:x="12" fg:w="1"/><text x="3.2575%" y="319.50"></text></g><g><title>dns-tcp-network`tokio::sync::notify::Notify::notify_waiters (1 samples, 0.25%)</title><rect x="3.0075%" y="293" width="0.2506%" height="15" fill="rgb(253,215,40)" fg:x="12" fg:w="1"/><text x="3.2575%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_init (1 samples, 0.25%)</title><rect x="3.0075%" y="277" width="0.2506%" height="15" fill="rgb(211,81,21)" fg:x="12" fg:w="1"/><text x="3.2575%" y="287.50"></text></g><g><title>dns-tcp-network`&lt;des::sync::rwlock::WriteBorrow as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="7.5188%" y="469" width="0.2506%" height="15" fill="rgb(208,190,38)" fg:x="30" fg:w="1"/><text x="7.7688%" y="479.50"></text></g><g><title>dns-tcp-network`des::net::gate::Gate::next_gate (2 samples, 0.50%)</title><rect x="7.7694%" y="469" width="0.5013%" height="15" fill="rgb(235,213,38)" fg:x="31" fg:w="2"/><text x="8.0194%" y="479.50"></text></g><g><title>dns-tcp-network`des::net::gate::Gate::owner (4 samples, 1.00%)</title><rect x="8.2707%" y="469" width="1.0025%" height="15" fill="rgb(237,122,38)" fg:x="33" fg:w="4"/><text x="8.5207%" y="479.50"></text></g><g><title>dns-tcp-network`des::net::module::reference::ModuleRefWeak::upgrade (4 samples, 1.00%)</title><rect x="8.2707%" y="453" width="1.0025%" height="15" fill="rgb(244,218,35)" fg:x="33" fg:w="4"/><text x="8.5207%" y="463.50"></text></g><g><title>dns-tcp-network`des::time::driver::Driver::bump (3 samples, 0.75%)</title><rect x="9.5238%" y="453" width="0.7519%" height="15" fill="rgb(240,68,47)" fg:x="38" fg:w="3"/><text x="9.7738%" y="463.50"></text></g><g><title>dns-tcp-network`des::net::module::reference::ModuleRef::activate (7 samples, 1.75%)</title><rect x="9.2732%" y="469" width="1.7544%" height="15" fill="rgb(210,16,53)" fg:x="37" fg:w="7"/><text x="9.5232%" y="479.50"></text></g><g><title>dns-tcp-network`des::time::driver::Driver::set (3 samples, 0.75%)</title><rect x="10.2757%" y="453" width="0.7519%" height="15" fill="rgb(235,124,12)" fg:x="41" fg:w="3"/><text x="10.5257%" y="463.50"></text></g><g><title>dns-tcp-network`des::net::module::ctx::ModuleContext::take (1 samples, 0.25%)</title><rect x="11.5288%" y="453" width="0.2506%" height="15" fill="rgb(224,169,11)" fg:x="46" fg:w="1"/><text x="11.7788%" y="463.50"></text></g><g><title>dns-tcp-network`des::time::driver::Driver::next (1 samples, 0.25%)</title><rect x="11.7794%" y="453" width="0.2506%" height="15" fill="rgb(250,166,2)" fg:x="47" fg:w="1"/><text x="12.0294%" y="463.50"></text></g><g><title>dns-tcp-network`des::net::module::reference::ModuleRef::deactivate (5 samples, 1.25%)</title><rect x="11.0276%" y="469" width="1.2531%" height="15" fill="rgb(242,216,29)" fg:x="44" fg:w="5"/><text x="11.2776%" y="479.50"></text></g><g><title>dns-tcp-network`des::time::driver::Driver::unset (1 samples, 0.25%)</title><rect x="12.0301%" y="453" width="0.2506%" height="15" fill="rgb(230,116,27)" fg:x="48" fg:w="1"/><text x="12.2801%" y="463.50"></text></g><g><title>dns-tcp-network`des::net::plugin::registry::PluginRegistry::put_back_downstream (1 samples, 0.25%)</title><rect x="12.2807%" y="469" width="0.2506%" height="15" fill="rgb(228,99,48)" fg:x="49" fg:w="1"/><text x="12.5307%" y="479.50"></text></g><g><title>dns-tcp-network`&lt;des::time::SimTime as core::ops::deref::Deref&gt;::deref (1 samples, 0.25%)</title><rect x="13.0326%" y="453" width="0.2506%" height="15" fill="rgb(253,11,6)" fg:x="52" fg:w="1"/><text x="13.2826%" y="463.50"></text></g><g><title>dns-tcp-network`compiler_builtins::int::specialized_div_rem::u128_div_rem (1 samples, 0.25%)</title><rect x="13.2832%" y="453" width="0.2506%" height="15" fill="rgb(247,143,39)" fg:x="53" fg:w="1"/><text x="13.5332%" y="463.50"></text></g><g><title>dns-tcp-network`core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(des::net::runtime::events::NetEvents,des::time::SimTime)&gt;&gt; (1 samples, 0.25%)</title><rect x="13.5338%" y="453" width="0.2506%" height="15" fill="rgb(236,97,10)" fg:x="54" fg:w="1"/><text x="13.7838%" y="463.50"></text></g><g><title>dns-tcp-network`__umodti3 (1 samples, 0.25%)</title><rect x="14.2857%" y="437" width="0.2506%" height="15" fill="rgb(233,208,19)" fg:x="57" fg:w="1"/><text x="14.5357%" y="447.50"></text></g><g><title>dns-tcp-network`compiler_builtins::int::specialized_div_rem::u128_div_rem (2 samples, 0.50%)</title><rect x="14.5363%" y="437" width="0.5013%" height="15" fill="rgb(216,164,2)" fg:x="58" fg:w="2"/><text x="14.7863%" y="447.50"></text></g><g><title>dns-tcp-network`des::net::runtime::ctx::buf_process (26 samples, 6.52%)</title><rect x="12.5313%" y="469" width="6.5163%" height="15" fill="rgb(220,129,5)" fg:x="50" fg:w="26"/><text x="12.7813%" y="479.50">dns-tcp-n..</text></g><g><title>dns-tcp-network`des::runtime::event::event_set::cqueue_impl::FutureEventSet&lt;A&gt;::add (21 samples, 5.26%)</title><rect x="13.7845%" y="453" width="5.2632%" height="15" fill="rgb(242,17,10)" fg:x="55" fg:w="21"/><text x="14.0345%" y="463.50">dns-tc..</text></g><g><title>dns-tcp-network`des_cqueue::stable::linked_list::DualLinkedList&lt;T&gt;::add (16 samples, 4.01%)</title><rect x="15.0376%" y="437" width="4.0100%" height="15" fill="rgb(242,107,0)" fg:x="60" fg:w="16"/><text x="15.2876%" y="447.50">dns-..</text></g><g><title>dns-tcp-network`des_cqueue::stable::alloc::CQueueLLAllocator::allocate (2 samples, 0.50%)</title><rect x="18.5464%" y="421" width="0.5013%" height="15" fill="rgb(251,28,31)" fg:x="74" fg:w="2"/><text x="18.7964%" y="431.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::Context::enter (1 samples, 0.25%)</title><rect x="19.0476%" y="405" width="0.2506%" height="15" fill="rgb(233,223,10)" fg:x="76" fg:w="1"/><text x="19.2976%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.25%)</title><rect x="19.0476%" y="389" width="0.2506%" height="15" fill="rgb(215,21,27)" fg:x="76" fg:w="1"/><text x="19.2976%" y="399.50"></text></g><g><title>dns-tcp-network`&lt;inet_rip::pkt::RipPacket as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="19.2982%" y="325" width="0.2506%" height="15" fill="rgb(232,23,21)" fg:x="77" fg:w="1"/><text x="19.5482%" y="335.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="19.2982%" y="309" width="0.2506%" height="15" fill="rgb(244,5,23)" fg:x="77" fg:w="1"/><text x="19.5482%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.25%)</title><rect x="19.2982%" y="293" width="0.2506%" height="15" fill="rgb(226,81,46)" fg:x="77" fg:w="1"/><text x="19.5482%" y="303.50"></text></g><g><title>dns-tcp-network`des::net::runtime::events::_&lt;impl des::net::module::reference::ModuleRef&gt;::async_wakeup (3 samples, 0.75%)</title><rect x="19.0476%" y="469" width="0.7519%" height="15" fill="rgb(247,70,30)" fg:x="76" fg:w="3"/><text x="19.2976%" y="479.50"></text></g><g><title>dns-tcp-network`des::net::runtime::events::_&lt;impl des::net::module::reference::ModuleRef&gt;::run_without_event (3 samples, 0.75%)</title><rect x="19.0476%" y="453" width="0.7519%" height="15" fill="rgb(212,68,19)" fg:x="76" fg:w="3"/><text x="19.2976%" y="463.50"></text></g><g><title>dns-tcp-network`tokio::runtime::runtime::Runtime::block_on (3 samples, 0.75%)</title><rect x="19.0476%" y="437" width="0.7519%" height="15" fill="rgb(240,187,13)" fg:x="76" fg:w="3"/><text x="19.2976%" y="447.50"></text></g><g><title>dns-tcp-network`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3 samples, 0.75%)</title><rect x="19.0476%" y="421" width="0.7519%" height="15" fill="rgb(223,113,26)" fg:x="76" fg:w="3"/><text x="19.2976%" y="431.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::Context::run_task (2 samples, 0.50%)</title><rect x="19.2982%" y="405" width="0.5013%" height="15" fill="rgb(206,192,2)" fg:x="77" fg:w="2"/><text x="19.5482%" y="415.50"></text></g><g><title>dns-tcp-network`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.50%)</title><rect x="19.2982%" y="389" width="0.5013%" height="15" fill="rgb(241,108,4)" fg:x="77" fg:w="2"/><text x="19.5482%" y="399.50"></text></g><g><title>dns-tcp-network`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.50%)</title><rect x="19.2982%" y="373" width="0.5013%" height="15" fill="rgb(247,173,49)" fg:x="77" fg:w="2"/><text x="19.5482%" y="383.50"></text></g><g><title>dns-tcp-network`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.50%)</title><rect x="19.2982%" y="357" width="0.5013%" height="15" fill="rgb(224,114,35)" fg:x="77" fg:w="2"/><text x="19.5482%" y="367.50"></text></g><g><title>dns-tcp-network`inet_rip::RipRoutingDeamon::deploy::_{{closure}} (2 samples, 0.50%)</title><rect x="19.2982%" y="341" width="0.5013%" height="15" fill="rgb(245,159,27)" fg:x="77" fg:w="2"/><text x="19.5482%" y="351.50"></text></g><g><title>dns-tcp-network`inet::udp::api::UdpSocket::send_to::_{{closure}} (1 samples, 0.25%)</title><rect x="19.5489%" y="325" width="0.2506%" height="15" fill="rgb(245,172,44)" fg:x="78" fg:w="1"/><text x="19.7989%" y="335.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::with_current (1 samples, 0.25%)</title><rect x="19.5489%" y="309" width="0.2506%" height="15" fill="rgb(236,23,11)" fg:x="78" fg:w="1"/><text x="19.7989%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.25%)</title><rect x="19.5489%" y="293" width="0.2506%" height="15" fill="rgb(205,117,38)" fg:x="78" fg:w="1"/><text x="19.7989%" y="303.50"></text></g><g><title>dns-tcp-network`&lt;inet::plugin::IOPlugin as des::net::plugin::Plugin&gt;::event_start (2 samples, 0.50%)</title><rect x="19.7995%" y="453" width="0.5013%" height="15" fill="rgb(237,72,25)" fg:x="79" fg:w="2"/><text x="20.0495%" y="463.50"></text></g><g><title>dns-tcp-network`&lt;des::net::gate::Gate as core::cmp::PartialEq&gt;::eq (4 samples, 1.00%)</title><rect x="20.5514%" y="437" width="1.0025%" height="15" fill="rgb(244,70,9)" fg:x="82" fg:w="4"/><text x="20.8014%" y="447.50"></text></g><g><title>dns-tcp-network`des::net::message::api::send (2 samples, 0.50%)</title><rect x="21.5539%" y="437" width="0.5013%" height="15" fill="rgb(217,125,39)" fg:x="86" fg:w="2"/><text x="21.8039%" y="447.50"></text></g><g><title>dns-tcp-network`des::net::runtime::ctx::buf_send_at (1 samples, 0.25%)</title><rect x="21.8045%" y="421" width="0.2506%" height="15" fill="rgb(235,36,10)" fg:x="87" fg:w="1"/><text x="22.0545%" y="431.50"></text></g><g><title>dns-tcp-network`des::net::runtime::events::MessageAtGateEvent::handle_with_sink (1 samples, 0.25%)</title><rect x="21.8045%" y="405" width="0.2506%" height="15" fill="rgb(251,123,47)" fg:x="87" fg:w="1"/><text x="22.0545%" y="415.50"></text></g><g><title>dns-tcp-network`des::net::channel::Channel::send_message (1 samples, 0.25%)</title><rect x="21.8045%" y="389" width="0.2506%" height="15" fill="rgb(221,13,13)" fg:x="87" fg:w="1"/><text x="22.0545%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.25%)</title><rect x="22.5564%" y="405" width="0.2506%" height="15" fill="rgb(238,131,9)" fg:x="90" fg:w="1"/><text x="22.8064%" y="415.50"></text></g><g><title>dns-tcp-network`des::net::gate::Gate::channel (4 samples, 1.00%)</title><rect x="22.0551%" y="421" width="1.0025%" height="15" fill="rgb(211,50,8)" fg:x="88" fg:w="4"/><text x="22.3051%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.25%)</title><rect x="22.8070%" y="405" width="0.2506%" height="15" fill="rgb(245,182,24)" fg:x="91" fg:w="1"/><text x="23.0570%" y="415.50"></text></g><g><title>dns-tcp-network`des::net::message::api::schedule_at (2 samples, 0.50%)</title><rect x="23.0576%" y="421" width="0.5013%" height="15" fill="rgb(242,14,37)" fg:x="92" fg:w="2"/><text x="23.3076%" y="431.50"></text></g><g><title>dns-tcp-network`des::net::runtime::ctx::buf_schedule_at (2 samples, 0.50%)</title><rect x="23.0576%" y="405" width="0.5013%" height="15" fill="rgb(246,228,12)" fg:x="92" fg:w="2"/><text x="23.3076%" y="415.50"></text></g><g><title>dns-tcp-network`des::net::plugin::plugin_output_stream (4 samples, 1.00%)</title><rect x="23.8095%" y="405" width="1.0025%" height="15" fill="rgb(213,55,15)" fg:x="95" fg:w="4"/><text x="24.0595%" y="415.50"></text></g><g><title>dns-tcp-network`des::net::module::reference::ModuleRefWeak::upgrade (1 samples, 0.25%)</title><rect x="24.8120%" y="389" width="0.2506%" height="15" fill="rgb(209,9,3)" fg:x="99" fg:w="1"/><text x="25.0620%" y="399.50"></text></g><g><title>dns-tcp-network`DYLD-STUB$$pthread_rwlock_wrlock (1 samples, 0.25%)</title><rect x="25.0627%" y="373" width="0.2506%" height="15" fill="rgb(230,59,30)" fg:x="100" fg:w="1"/><text x="25.3127%" y="383.50"></text></g><g><title>dns-tcp-network`inet::utils::switch::LinkLayerSwitch::forward (14 samples, 3.51%)</title><rect x="22.0551%" y="437" width="3.5088%" height="15" fill="rgb(209,121,21)" fg:x="88" fg:w="14"/><text x="22.3051%" y="447.50">dns..</text></g><g><title>dns-tcp-network`des::net::message::api::send (8 samples, 2.01%)</title><rect x="23.5589%" y="421" width="2.0050%" height="15" fill="rgb(220,109,13)" fg:x="94" fg:w="8"/><text x="23.8089%" y="431.50">d..</text></g><g><title>dns-tcp-network`des::net::runtime::ctx::buf_send_at (3 samples, 0.75%)</title><rect x="24.8120%" y="405" width="0.7519%" height="15" fill="rgb(232,18,1)" fg:x="99" fg:w="3"/><text x="25.0620%" y="415.50"></text></g><g><title>dns-tcp-network`des::net::runtime::events::MessageAtGateEvent::handle_with_sink (2 samples, 0.50%)</title><rect x="25.0627%" y="389" width="0.5013%" height="15" fill="rgb(215,41,42)" fg:x="100" fg:w="2"/><text x="25.3127%" y="399.50"></text></g><g><title>dns-tcp-network`des::net::channel::Channel::send_message (1 samples, 0.25%)</title><rect x="25.3133%" y="373" width="0.2506%" height="15" fill="rgb(224,123,36)" fg:x="101" fg:w="1"/><text x="25.5633%" y="383.50"></text></g><g><title>dns-tcp-network`&lt;inet::utils::switch::LinkLayerSwitch as des::net::module::Module&gt;::handle_message (22 samples, 5.51%)</title><rect x="20.3008%" y="453" width="5.5138%" height="15" fill="rgb(240,125,3)" fg:x="81" fg:w="22"/><text x="20.5508%" y="463.50">dns-tcp..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.25%)</title><rect x="25.5639%" y="437" width="0.2506%" height="15" fill="rgb(205,98,50)" fg:x="102" fg:w="1"/><text x="25.8139%" y="447.50"></text></g><g><title>dns-tcp-network`des::net::plugin::registry::PluginRegistry::being_upstream (2 samples, 0.50%)</title><rect x="25.8145%" y="453" width="0.5013%" height="15" fill="rgb(205,185,37)" fg:x="103" fg:w="2"/><text x="26.0645%" y="463.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::recv (1 samples, 0.25%)</title><rect x="26.8170%" y="421" width="0.2506%" height="15" fill="rgb(238,207,15)" fg:x="107" fg:w="1"/><text x="27.0670%" y="431.50"></text></g><g><title>dns-tcp-network`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.25%)</title><rect x="29.0727%" y="389" width="0.2506%" height="15" fill="rgb(213,199,42)" fg:x="116" fg:w="1"/><text x="29.3227%" y="399.50"></text></g><g><title>dns-tcp-network`&lt;des::net::gate::Gate as core::cmp::PartialEq&gt;::eq (2 samples, 0.50%)</title><rect x="29.3233%" y="389" width="0.5013%" height="15" fill="rgb(235,201,11)" fg:x="117" fg:w="2"/><text x="29.5733%" y="399.50"></text></g><g><title>dns-tcp-network`core::ptr::drop_in_place&lt;des::net::message::Message&gt; (6 samples, 1.50%)</title><rect x="29.8246%" y="389" width="1.5038%" height="15" fill="rgb(207,46,11)" fg:x="119" fg:w="6"/><text x="30.0746%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 1.50%)</title><rect x="29.8246%" y="373" width="1.5038%" height="15" fill="rgb(241,35,35)" fg:x="119" fg:w="6"/><text x="30.0746%" y="383.50"></text></g><g><title>dns-tcp-network`core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.25%)</title><rect x="31.3283%" y="389" width="0.2506%" height="15" fill="rgb(243,32,47)" fg:x="125" fg:w="1"/><text x="31.5783%" y="399.50"></text></g><g><title>dns-tcp-network`&lt;des::tracing::Subscriber&lt;P&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.25%)</title><rect x="31.3283%" y="373" width="0.2506%" height="15" fill="rgb(247,202,23)" fg:x="125" fg:w="1"/><text x="31.5783%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.25%)</title><rect x="31.3283%" y="357" width="0.2506%" height="15" fill="rgb(219,102,11)" fg:x="125" fg:w="1"/><text x="31.5783%" y="367.50"></text></g><g><title>dns-tcp-network`des::net::channel::Channel::is_busy (1 samples, 0.25%)</title><rect x="31.5789%" y="389" width="0.2506%" height="15" fill="rgb(243,110,44)" fg:x="126" fg:w="1"/><text x="31.8289%" y="399.50"></text></g><g><title>dns-tcp-network`des::net::message::Message::new (1 samples, 0.25%)</title><rect x="32.0802%" y="357" width="0.2506%" height="15" fill="rgb(222,74,54)" fg:x="128" fg:w="1"/><text x="32.3302%" y="367.50"></text></g><g><title>dns-tcp-network`&lt;&amp;alloc::sync::Arc&lt;des::net::gate::Gate&gt; as des::net::gate::IntoModuleGate&gt;::as_gate (1 samples, 0.25%)</title><rect x="32.5815%" y="325" width="0.2506%" height="15" fill="rgb(216,99,12)" fg:x="130" fg:w="1"/><text x="32.8315%" y="335.50"></text></g><g><title>dns-tcp-network`des::net::channel::Channel::calculate_busy (1 samples, 0.25%)</title><rect x="32.8321%" y="325" width="0.2506%" height="15" fill="rgb(226,22,26)" fg:x="131" fg:w="1"/><text x="33.0821%" y="335.50"></text></g><g><title>dns-tcp-network`des::net::plugin::plugin_output_stream (2 samples, 0.50%)</title><rect x="33.0827%" y="309" width="0.5013%" height="15" fill="rgb(217,163,10)" fg:x="132" fg:w="2"/><text x="33.3327%" y="319.50"></text></g><g><title>dns-tcp-network`DYLD-STUB$$pthread_rwlock_unlock (1 samples, 0.25%)</title><rect x="33.8346%" y="277" width="0.2506%" height="15" fill="rgb(213,25,53)" fg:x="135" fg:w="1"/><text x="34.0846%" y="287.50"></text></g><g><title>dns-tcp-network`core::time::Duration::from_secs_f64 (1 samples, 0.25%)</title><rect x="34.0852%" y="277" width="0.2506%" height="15" fill="rgb(252,105,26)" fg:x="136" fg:w="1"/><text x="34.3352%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.25%)</title><rect x="34.3358%" y="261" width="0.2506%" height="15" fill="rgb(220,39,43)" fg:x="137" fg:w="1"/><text x="34.5858%" y="271.50"></text></g><g><title>dns-tcp-network`des::net::gate::Gate::channel_mut (2 samples, 0.50%)</title><rect x="34.3358%" y="277" width="0.5013%" height="15" fill="rgb(229,68,48)" fg:x="137" fg:w="2"/><text x="34.5858%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.25%)</title><rect x="34.5865%" y="261" width="0.2506%" height="15" fill="rgb(252,8,32)" fg:x="138" fg:w="1"/><text x="34.8365%" y="271.50"></text></g><g><title>dns-tcp-network`des::net::gate::Gate::next_gate (1 samples, 0.25%)</title><rect x="34.8371%" y="277" width="0.2506%" height="15" fill="rgb(223,20,43)" fg:x="139" fg:w="1"/><text x="35.0871%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.25%)</title><rect x="34.8371%" y="261" width="0.2506%" height="15" fill="rgb(229,81,49)" fg:x="139" fg:w="1"/><text x="35.0871%" y="271.50"></text></g><g><title>dns-tcp-network`des::net::runtime::ctx::buf_send_at (7 samples, 1.75%)</title><rect x="33.5840%" y="309" width="1.7544%" height="15" fill="rgb(236,28,36)" fg:x="134" fg:w="7"/><text x="33.8340%" y="319.50"></text></g><g><title>dns-tcp-network`des::net::runtime::events::MessageAtGateEvent::handle_with_sink (7 samples, 1.75%)</title><rect x="33.5840%" y="293" width="1.7544%" height="15" fill="rgb(249,185,26)" fg:x="134" fg:w="7"/><text x="33.8340%" y="303.50"></text></g><g><title>dns-tcp-network`des::net::module::reference::ModuleRefWeak::upgrade (1 samples, 0.25%)</title><rect x="35.0877%" y="277" width="0.2506%" height="15" fill="rgb(249,174,33)" fg:x="140" fg:w="1"/><text x="35.3377%" y="287.50"></text></g><g><title>dns-tcp-network`des::net::message::api::send (10 samples, 2.51%)</title><rect x="33.0827%" y="325" width="2.5063%" height="15" fill="rgb(233,201,37)" fg:x="132" fg:w="10"/><text x="33.3327%" y="335.50">dn..</text></g><g><title>dns-tcp-network`des::time::SimTime::now (1 samples, 0.25%)</title><rect x="35.3383%" y="309" width="0.2506%" height="15" fill="rgb(221,78,26)" fg:x="141" fg:w="1"/><text x="35.5883%" y="319.50"></text></g><g><title>dns-tcp-network`inet::interface::device::NetworkDevice::send (13 samples, 3.26%)</title><rect x="32.5815%" y="341" width="3.2581%" height="15" fill="rgb(250,127,30)" fg:x="130" fg:w="13"/><text x="32.8315%" y="351.50">dns..</text></g><g><title>dns-tcp-network`des::net::runtime::ctx::buf_send_at (1 samples, 0.25%)</title><rect x="35.5890%" y="325" width="0.2506%" height="15" fill="rgb(230,49,44)" fg:x="142" fg:w="1"/><text x="35.8390%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.25%)</title><rect x="35.8396%" y="325" width="0.2506%" height="15" fill="rgb(229,67,23)" fg:x="143" fg:w="1"/><text x="36.0896%" y="335.50"></text></g><g><title>dns-tcp-network`inet::interface::types::_&lt;impl core::convert::From&lt;inet::interface::types::LinkUpdate&gt; for des::net::message::Message&gt;::from (2 samples, 0.50%)</title><rect x="35.8396%" y="341" width="0.5013%" height="15" fill="rgb(249,83,47)" fg:x="143" fg:w="2"/><text x="36.0896%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.25%)</title><rect x="36.0902%" y="325" width="0.2506%" height="15" fill="rgb(215,43,3)" fg:x="144" fg:w="1"/><text x="36.3402%" y="335.50"></text></g><g><title>dns-tcp-network`inet::interface::Interface::send (17 samples, 4.26%)</title><rect x="32.3308%" y="357" width="4.2607%" height="15" fill="rgb(238,154,13)" fg:x="129" fg:w="17"/><text x="32.5808%" y="367.50">dns-t..</text></g><g><title>dns-tcp-network`inet::libpcap::capture (1 samples, 0.25%)</title><rect x="36.3409%" y="341" width="0.2506%" height="15" fill="rgb(219,56,2)" fg:x="145" fg:w="1"/><text x="36.5909%" y="351.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_ip_packet (20 samples, 5.01%)</title><rect x="31.8296%" y="389" width="5.0125%" height="15" fill="rgb(233,0,4)" fg:x="127" fg:w="20"/><text x="32.0796%" y="399.50">dns-tc..</text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_lan_local_ip_packet (19 samples, 4.76%)</title><rect x="32.0802%" y="373" width="4.7619%" height="15" fill="rgb(235,30,7)" fg:x="128" fg:w="19"/><text x="32.3302%" y="383.50">dns-tc..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.25%)</title><rect x="36.5915%" y="357" width="0.2506%" height="15" fill="rgb(250,79,13)" fg:x="146" fg:w="1"/><text x="36.8415%" y="367.50"></text></g><g><title>dns-tcp-network`DYLD-STUB$$pthread_mutex_lock (1 samples, 0.25%)</title><rect x="37.5940%" y="373" width="0.2506%" height="15" fill="rgb(211,146,34)" fg:x="150" fg:w="1"/><text x="37.8440%" y="383.50"></text></g><g><title>dns-tcp-network`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.25%)</title><rect x="37.8446%" y="373" width="0.2506%" height="15" fill="rgb(228,22,38)" fg:x="151" fg:w="1"/><text x="38.0946%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.25%)</title><rect x="38.5965%" y="357" width="0.2506%" height="15" fill="rgb(235,168,5)" fg:x="154" fg:w="1"/><text x="38.8465%" y="367.50"></text></g><g><title>dns-tcp-network`des::net::gate::Gate::channel (4 samples, 1.00%)</title><rect x="38.0952%" y="373" width="1.0025%" height="15" fill="rgb(221,155,16)" fg:x="152" fg:w="4"/><text x="38.3452%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.25%)</title><rect x="38.8471%" y="357" width="0.2506%" height="15" fill="rgb(215,215,53)" fg:x="155" fg:w="1"/><text x="39.0971%" y="367.50"></text></g><g><title>dns-tcp-network`des::net::plugin::plugin_output_stream (1 samples, 0.25%)</title><rect x="39.0977%" y="373" width="0.2506%" height="15" fill="rgb(223,4,10)" fg:x="156" fg:w="1"/><text x="39.3477%" y="383.50"></text></g><g><title>dns-tcp-network`core::time::Duration::from_secs_f64 (1 samples, 0.25%)</title><rect x="39.3484%" y="357" width="0.2506%" height="15" fill="rgb(234,103,6)" fg:x="157" fg:w="1"/><text x="39.5984%" y="367.50"></text></g><g><title>dns-tcp-network`des::net::plugin::plugin_output_stream (1 samples, 0.25%)</title><rect x="39.5990%" y="341" width="0.2506%" height="15" fill="rgb(227,97,0)" fg:x="158" fg:w="1"/><text x="39.8490%" y="351.50"></text></g><g><title>dns-tcp-network`des::net::channel::Channel::send_message (1 samples, 0.25%)</title><rect x="39.8496%" y="325" width="0.2506%" height="15" fill="rgb(234,150,53)" fg:x="159" fg:w="1"/><text x="40.0996%" y="335.50"></text></g><g><title>dns-tcp-network`des::net::message::api::send (5 samples, 1.25%)</title><rect x="39.5990%" y="357" width="1.2531%" height="15" fill="rgb(228,201,54)" fg:x="158" fg:w="5"/><text x="39.8490%" y="367.50"></text></g><g><title>dns-tcp-network`des::net::runtime::ctx::buf_send_at (4 samples, 1.00%)</title><rect x="39.8496%" y="341" width="1.0025%" height="15" fill="rgb(222,22,37)" fg:x="159" fg:w="4"/><text x="40.0996%" y="351.50"></text></g><g><title>dns-tcp-network`des::net::runtime::events::MessageAtGateEvent::handle_with_sink (3 samples, 0.75%)</title><rect x="40.1003%" y="325" width="0.7519%" height="15" fill="rgb(237,53,32)" fg:x="160" fg:w="3"/><text x="40.3503%" y="335.50"></text></g><g><title>dns-tcp-network`des::net::module::reference::ModuleRefWeak::upgrade (1 samples, 0.25%)</title><rect x="40.6015%" y="309" width="0.2506%" height="15" fill="rgb(233,25,53)" fg:x="162" fg:w="1"/><text x="40.8515%" y="319.50"></text></g><g><title>dns-tcp-network`inet::interface::device::NetworkDevice::send (7 samples, 1.75%)</title><rect x="39.3484%" y="373" width="1.7544%" height="15" fill="rgb(210,40,34)" fg:x="157" fg:w="7"/><text x="39.5984%" y="383.50"></text></g><g><title>dns-tcp-network`des::net::plugin::plugin_output_stream (1 samples, 0.25%)</title><rect x="40.8521%" y="357" width="0.2506%" height="15" fill="rgb(241,220,44)" fg:x="163" fg:w="1"/><text x="41.1021%" y="367.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::blocks::EPB as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="41.6040%" y="341" width="0.2506%" height="15" fill="rgb(235,28,35)" fg:x="166" fg:w="1"/><text x="41.8540%" y="351.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="41.6040%" y="325" width="0.2506%" height="15" fill="rgb(210,56,17)" fg:x="166" fg:w="1"/><text x="41.8540%" y="335.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (1 samples, 0.25%)</title><rect x="41.6040%" y="309" width="0.2506%" height="15" fill="rgb(224,130,29)" fg:x="166" fg:w="1"/><text x="41.8540%" y="319.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="41.6040%" y="293" width="0.2506%" height="15" fill="rgb(235,212,8)" fg:x="166" fg:w="1"/><text x="41.8540%" y="303.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="41.6040%" y="277" width="0.2506%" height="15" fill="rgb(223,33,50)" fg:x="166" fg:w="1"/><text x="41.8540%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.25%)</title><rect x="41.6040%" y="261" width="0.2506%" height="15" fill="rgb(219,149,13)" fg:x="166" fg:w="1"/><text x="41.8540%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.25%)</title><rect x="41.6040%" y="245" width="0.2506%" height="15" fill="rgb(250,156,29)" fg:x="166" fg:w="1"/><text x="41.8540%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.25%)</title><rect x="41.6040%" y="229" width="0.2506%" height="15" fill="rgb(216,193,19)" fg:x="166" fg:w="1"/><text x="41.8540%" y="239.50"></text></g><g><title>dns-tcp-network`inet_pcap::LibPcapDeamon::write_l3_packet (1 samples, 0.25%)</title><rect x="41.8546%" y="341" width="0.2506%" height="15" fill="rgb(216,135,14)" fg:x="167" fg:w="1"/><text x="42.1046%" y="351.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::LibPcapDeamon as inet::libpcap::PcapSubscriber&gt;::capture (4 samples, 1.00%)</title><rect x="41.3534%" y="357" width="1.0025%" height="15" fill="rgb(241,47,5)" fg:x="165" fg:w="4"/><text x="41.6034%" y="367.50"></text></g><g><title>dns-tcp-network`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (1 samples, 0.25%)</title><rect x="42.1053%" y="341" width="0.2506%" height="15" fill="rgb(233,42,35)" fg:x="168" fg:w="1"/><text x="42.3553%" y="351.50"></text></g><g><title>dns-tcp-network`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.25%)</title><rect x="42.1053%" y="325" width="0.2506%" height="15" fill="rgb(231,13,6)" fg:x="168" fg:w="1"/><text x="42.3553%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.25%)</title><rect x="42.1053%" y="309" width="0.2506%" height="15" fill="rgb(207,181,40)" fg:x="168" fg:w="1"/><text x="42.3553%" y="319.50"></text></g><g><title>dns-tcp-network`inet::libpcap::capture (6 samples, 1.50%)</title><rect x="41.1028%" y="373" width="1.5038%" height="15" fill="rgb(254,173,49)" fg:x="164" fg:w="6"/><text x="41.3528%" y="383.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="42.3559%" y="357" width="0.2506%" height="15" fill="rgb(221,1,38)" fg:x="169" fg:w="1"/><text x="42.6059%" y="367.50"></text></g><g><title>dns-tcp-network`inet::interface::Interface::recv_link_update (24 samples, 6.02%)</title><rect x="36.8421%" y="389" width="6.0150%" height="15" fill="rgb(206,124,46)" fg:x="147" fg:w="24"/><text x="37.0921%" y="399.50">dns-tcp-..</text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (1 samples, 0.25%)</title><rect x="42.6065%" y="373" width="0.2506%" height="15" fill="rgb(249,21,11)" fg:x="170" fg:w="1"/><text x="42.8565%" y="383.50"></text></g><g><title>dns-tcp-network`inet::interface::Interface::send_buffered (1 samples, 0.25%)</title><rect x="42.8571%" y="389" width="0.2506%" height="15" fill="rgb(222,201,40)" fg:x="171" fg:w="1"/><text x="43.1071%" y="399.50"></text></g><g><title>dns-tcp-network`inet::interface::Interface::send (1 samples, 0.25%)</title><rect x="42.8571%" y="373" width="0.2506%" height="15" fill="rgb(235,61,29)" fg:x="171" fg:w="1"/><text x="43.1071%" y="383.50"></text></g><g><title>dns-tcp-network`inet::libpcap::capture (1 samples, 0.25%)</title><rect x="42.8571%" y="357" width="0.2506%" height="15" fill="rgb(219,207,3)" fg:x="171" fg:w="1"/><text x="43.1071%" y="367.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::LibPcapDeamon as inet::libpcap::PcapSubscriber&gt;::capture (1 samples, 0.25%)</title><rect x="42.8571%" y="341" width="0.2506%" height="15" fill="rgb(222,56,46)" fg:x="171" fg:w="1"/><text x="43.1071%" y="351.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::blocks::EPB as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="42.8571%" y="325" width="0.2506%" height="15" fill="rgb(239,76,54)" fg:x="171" fg:w="1"/><text x="43.1071%" y="335.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="42.8571%" y="309" width="0.2506%" height="15" fill="rgb(231,124,27)" fg:x="171" fg:w="1"/><text x="43.1071%" y="319.50"></text></g><g><title>dns-tcp-network`DYLD-STUB$$memcpy (1 samples, 0.25%)</title><rect x="42.8571%" y="293" width="0.2506%" height="15" fill="rgb(249,195,6)" fg:x="171" fg:w="1"/><text x="43.1071%" y="303.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (1 samples, 0.25%)</title><rect x="44.3609%" y="341" width="0.2506%" height="15" fill="rgb(237,174,47)" fg:x="177" fg:w="1"/><text x="44.6109%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.25%)</title><rect x="45.6140%" y="245" width="0.2506%" height="15" fill="rgb(206,201,31)" fg:x="182" fg:w="1"/><text x="45.8640%" y="255.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.50%)</title><rect x="45.6140%" y="309" width="0.5013%" height="15" fill="rgb(231,57,52)" fg:x="182" fg:w="2"/><text x="45.8640%" y="319.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::finish_grow (2 samples, 0.50%)</title><rect x="45.6140%" y="293" width="0.5013%" height="15" fill="rgb(248,177,22)" fg:x="182" fg:w="2"/><text x="45.8640%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.50%)</title><rect x="45.6140%" y="277" width="0.5013%" height="15" fill="rgb(215,211,37)" fg:x="182" fg:w="2"/><text x="45.8640%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.50%)</title><rect x="45.6140%" y="261" width="0.5013%" height="15" fill="rgb(241,128,51)" fg:x="182" fg:w="2"/><text x="45.8640%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.25%)</title><rect x="45.8647%" y="245" width="0.2506%" height="15" fill="rgb(227,165,31)" fg:x="183" fg:w="1"/><text x="46.1147%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.25%)</title><rect x="45.8647%" y="229" width="0.2506%" height="15" fill="rgb(228,167,24)" fg:x="183" fg:w="1"/><text x="46.1147%" y="239.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (6 samples, 1.50%)</title><rect x="44.8622%" y="325" width="1.5038%" height="15" fill="rgb(228,143,12)" fg:x="179" fg:w="6"/><text x="45.1122%" y="335.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="46.1153%" y="309" width="0.2506%" height="15" fill="rgb(249,149,8)" fg:x="184" fg:w="1"/><text x="46.3653%" y="319.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (8 samples, 2.01%)</title><rect x="44.6115%" y="341" width="2.0050%" height="15" fill="rgb(243,35,44)" fg:x="178" fg:w="8"/><text x="44.8615%" y="351.50">d..</text></g><g><title>dns-tcp-network`DYLD-STUB$$memcpy (1 samples, 0.25%)</title><rect x="46.3659%" y="325" width="0.2506%" height="15" fill="rgb(246,89,9)" fg:x="185" fg:w="1"/><text x="46.6159%" y="335.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::blocks::EPB as bytepack::ToBytestream&gt;::to_bytestream (10 samples, 2.51%)</title><rect x="44.3609%" y="357" width="2.5063%" height="15" fill="rgb(233,213,13)" fg:x="177" fg:w="10"/><text x="44.6109%" y="367.50">dn..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.25%)</title><rect x="46.6165%" y="341" width="0.2506%" height="15" fill="rgb(233,141,41)" fg:x="186" fg:w="1"/><text x="46.8665%" y="351.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (1 samples, 0.25%)</title><rect x="46.8672%" y="309" width="0.2506%" height="15" fill="rgb(239,167,4)" fg:x="187" fg:w="1"/><text x="47.1172%" y="319.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::ip::v4::Ipv4Packet as bytepack::ToBytestream&gt;::to_bytestream (5 samples, 1.25%)</title><rect x="46.8672%" y="341" width="1.2531%" height="15" fill="rgb(209,217,16)" fg:x="187" fg:w="5"/><text x="47.1172%" y="351.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (5 samples, 1.25%)</title><rect x="46.8672%" y="325" width="1.2531%" height="15" fill="rgb(219,88,35)" fg:x="187" fg:w="5"/><text x="47.1172%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 1.00%)</title><rect x="47.1178%" y="309" width="1.0025%" height="15" fill="rgb(220,193,23)" fg:x="188" fg:w="4"/><text x="47.3678%" y="319.50"></text></g><g><title>dns-tcp-network`inet_pcap::LibPcapDeamon::write_l3_packet (6 samples, 1.50%)</title><rect x="46.8672%" y="357" width="1.5038%" height="15" fill="rgb(230,90,52)" fg:x="187" fg:w="6"/><text x="47.1172%" y="367.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="48.1203%" y="341" width="0.2506%" height="15" fill="rgb(252,106,19)" fg:x="192" fg:w="1"/><text x="48.3703%" y="351.50"></text></g><g><title>dns-tcp-network`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (3 samples, 0.75%)</title><rect x="48.3709%" y="357" width="0.7519%" height="15" fill="rgb(206,74,20)" fg:x="193" fg:w="3"/><text x="48.6209%" y="367.50"></text></g><g><title>dns-tcp-network`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.75%)</title><rect x="48.3709%" y="341" width="0.7519%" height="15" fill="rgb(230,138,44)" fg:x="193" fg:w="3"/><text x="48.6209%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`write (3 samples, 0.75%)</title><rect x="48.3709%" y="325" width="0.7519%" height="15" fill="rgb(235,182,43)" fg:x="193" fg:w="3"/><text x="48.6209%" y="335.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::LibPcapDeamon as inet::libpcap::PcapSubscriber&gt;::capture (20 samples, 5.01%)</title><rect x="44.3609%" y="373" width="5.0125%" height="15" fill="rgb(242,16,51)" fg:x="177" fg:w="20"/><text x="44.6109%" y="383.50">dns-tc..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.25%)</title><rect x="49.1228%" y="357" width="0.2506%" height="15" fill="rgb(248,9,4)" fg:x="196" fg:w="1"/><text x="49.3728%" y="367.50"></text></g><g><title>dns-tcp-network`inet::libpcap::capture (26 samples, 6.52%)</title><rect x="43.1078%" y="389" width="6.5163%" height="15" fill="rgb(210,31,22)" fg:x="172" fg:w="26"/><text x="43.3578%" y="399.50">dns-tcp-n..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.25%)</title><rect x="49.3734%" y="373" width="0.2506%" height="15" fill="rgb(239,54,39)" fg:x="197" fg:w="1"/><text x="49.6234%" y="383.50"></text></g><g><title>dns-tcp-network`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.25%)</title><rect x="49.8747%" y="373" width="0.2506%" height="15" fill="rgb(230,99,41)" fg:x="199" fg:w="1"/><text x="50.1247%" y="383.50"></text></g><g><title>dns-tcp-network`&lt;des::tracing::Subscriber&lt;P&gt; as tracing_core::subscriber::Subscriber&gt;::clone_span (1 samples, 0.25%)</title><rect x="50.1253%" y="373" width="0.2506%" height="15" fill="rgb(253,106,12)" fg:x="200" fg:w="1"/><text x="50.3753%" y="383.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamReader as std::io::Read&gt;::read (1 samples, 0.25%)</title><rect x="50.3759%" y="341" width="0.2506%" height="15" fill="rgb(213,46,41)" fg:x="201" fg:w="1"/><text x="50.6259%" y="351.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::tcp::TcpPacket as bytepack::FromBytestream&gt;::from_bytestream (2 samples, 0.50%)</title><rect x="50.3759%" y="373" width="0.5013%" height="15" fill="rgb(215,133,35)" fg:x="201" fg:w="2"/><text x="50.6259%" y="383.50"></text></g><g><title>dns-tcp-network`std::io::default_read_exact (2 samples, 0.50%)</title><rect x="50.3759%" y="357" width="0.5013%" height="15" fill="rgb(213,28,5)" fg:x="201" fg:w="2"/><text x="50.6259%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.25%)</title><rect x="50.6266%" y="341" width="0.2506%" height="15" fill="rgb(215,77,49)" fg:x="202" fg:w="1"/><text x="50.8766%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.25%)</title><rect x="50.8772%" y="325" width="0.2506%" height="15" fill="rgb(248,100,22)" fg:x="203" fg:w="1"/><text x="51.1272%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.25%)</title><rect x="50.8772%" y="309" width="0.2506%" height="15" fill="rgb(208,67,9)" fg:x="203" fg:w="1"/><text x="51.1272%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.25%)</title><rect x="50.8772%" y="293" width="0.2506%" height="15" fill="rgb(219,133,21)" fg:x="203" fg:w="1"/><text x="51.1272%" y="303.50"></text></g><g><title>dns-tcp-network`inet::tcp::TransmissionControlBlock::new (2 samples, 0.50%)</title><rect x="50.8772%" y="373" width="0.5013%" height="15" fill="rgb(246,46,29)" fg:x="203" fg:w="2"/><text x="51.1272%" y="383.50"></text></g><g><title>dns-tcp-network`inet::tcp::buffer::TcpBuffer::new (2 samples, 0.50%)</title><rect x="50.8772%" y="357" width="0.5013%" height="15" fill="rgb(246,185,52)" fg:x="203" fg:w="2"/><text x="51.1272%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.50%)</title><rect x="50.8772%" y="341" width="0.5013%" height="15" fill="rgb(252,136,11)" fg:x="203" fg:w="2"/><text x="51.1272%" y="351.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.25%)</title><rect x="51.1278%" y="325" width="0.2506%" height="15" fill="rgb(219,138,53)" fg:x="204" fg:w="1"/><text x="51.3778%" y="335.50"></text></g><g><title>dns-tcp-network`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="51.3784%" y="341" width="0.2506%" height="15" fill="rgb(211,51,23)" fg:x="205" fg:w="1"/><text x="51.6284%" y="351.50"></text></g><g><title>dns-tcp-network`inet::tcp::TransmissionControlBlock::ip_packet_for (1 samples, 0.25%)</title><rect x="51.6291%" y="341" width="0.2506%" height="15" fill="rgb(247,221,28)" fg:x="206" fg:w="1"/><text x="51.8791%" y="351.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::tcp::TcpPacket as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="51.6291%" y="325" width="0.2506%" height="15" fill="rgb(251,222,45)" fg:x="206" fg:w="1"/><text x="51.8791%" y="335.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="51.6291%" y="309" width="0.2506%" height="15" fill="rgb(217,162,53)" fg:x="206" fg:w="1"/><text x="51.8791%" y="319.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (1 samples, 0.25%)</title><rect x="51.6291%" y="293" width="0.2506%" height="15" fill="rgb(229,93,14)" fg:x="206" fg:w="1"/><text x="51.8791%" y="303.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="51.6291%" y="277" width="0.2506%" height="15" fill="rgb(209,67,49)" fg:x="206" fg:w="1"/><text x="51.8791%" y="287.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="51.6291%" y="261" width="0.2506%" height="15" fill="rgb(213,87,29)" fg:x="206" fg:w="1"/><text x="51.8791%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.25%)</title><rect x="51.6291%" y="245" width="0.2506%" height="15" fill="rgb(205,151,52)" fg:x="206" fg:w="1"/><text x="51.8791%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.25%)</title><rect x="51.6291%" y="229" width="0.2506%" height="15" fill="rgb(253,215,39)" fg:x="206" fg:w="1"/><text x="51.8791%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.25%)</title><rect x="51.6291%" y="213" width="0.2506%" height="15" fill="rgb(221,220,41)" fg:x="206" fg:w="1"/><text x="51.8791%" y="223.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::blocks::EPB as bytepack::ToBytestream&gt;::to_bytestream (2 samples, 0.50%)</title><rect x="52.1303%" y="245" width="0.5013%" height="15" fill="rgb(218,133,21)" fg:x="208" fg:w="2"/><text x="52.3803%" y="255.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (2 samples, 0.50%)</title><rect x="52.1303%" y="229" width="0.5013%" height="15" fill="rgb(221,193,43)" fg:x="208" fg:w="2"/><text x="52.3803%" y="239.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (1 samples, 0.25%)</title><rect x="52.3810%" y="213" width="0.2506%" height="15" fill="rgb(240,128,52)" fg:x="209" fg:w="1"/><text x="52.6310%" y="223.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="52.3810%" y="197" width="0.2506%" height="15" fill="rgb(253,114,12)" fg:x="209" fg:w="1"/><text x="52.6310%" y="207.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="52.3810%" y="181" width="0.2506%" height="15" fill="rgb(215,223,47)" fg:x="209" fg:w="1"/><text x="52.6310%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.25%)</title><rect x="52.3810%" y="165" width="0.2506%" height="15" fill="rgb(248,225,23)" fg:x="209" fg:w="1"/><text x="52.6310%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.25%)</title><rect x="52.3810%" y="149" width="0.2506%" height="15" fill="rgb(250,108,0)" fg:x="209" fg:w="1"/><text x="52.6310%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.25%)</title><rect x="52.3810%" y="133" width="0.2506%" height="15" fill="rgb(228,208,7)" fg:x="209" fg:w="1"/><text x="52.6310%" y="143.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="52.6316%" y="245" width="0.2506%" height="15" fill="rgb(244,45,10)" fg:x="210" fg:w="1"/><text x="52.8816%" y="255.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="52.6316%" y="229" width="0.2506%" height="15" fill="rgb(207,125,25)" fg:x="210" fg:w="1"/><text x="52.8816%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.25%)</title><rect x="52.6316%" y="213" width="0.2506%" height="15" fill="rgb(210,195,18)" fg:x="210" fg:w="1"/><text x="52.8816%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.25%)</title><rect x="52.6316%" y="197" width="0.2506%" height="15" fill="rgb(249,80,12)" fg:x="210" fg:w="1"/><text x="52.8816%" y="207.50"></text></g><g><title>dns-tcp-network`inet::interface::Interface::send (6 samples, 1.50%)</title><rect x="51.8797%" y="293" width="1.5038%" height="15" fill="rgb(221,65,9)" fg:x="207" fg:w="6"/><text x="52.1297%" y="303.50"></text></g><g><title>dns-tcp-network`inet::libpcap::capture (5 samples, 1.25%)</title><rect x="52.1303%" y="277" width="1.2531%" height="15" fill="rgb(235,49,36)" fg:x="208" fg:w="5"/><text x="52.3803%" y="287.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::LibPcapDeamon as inet::libpcap::PcapSubscriber&gt;::capture (5 samples, 1.25%)</title><rect x="52.1303%" y="261" width="1.2531%" height="15" fill="rgb(225,32,20)" fg:x="208" fg:w="5"/><text x="52.3803%" y="271.50"></text></g><g><title>dns-tcp-network`inet_pcap::LibPcapDeamon::write_l3_packet (2 samples, 0.50%)</title><rect x="52.8822%" y="245" width="0.5013%" height="15" fill="rgb(215,141,46)" fg:x="211" fg:w="2"/><text x="53.1322%" y="255.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::ip::v4::Ipv4Packet as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="53.1328%" y="229" width="0.2506%" height="15" fill="rgb(250,160,47)" fg:x="212" fg:w="1"/><text x="53.3828%" y="239.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="53.1328%" y="213" width="0.2506%" height="15" fill="rgb(216,222,40)" fg:x="212" fg:w="1"/><text x="53.3828%" y="223.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (1 samples, 0.25%)</title><rect x="53.1328%" y="197" width="0.2506%" height="15" fill="rgb(234,217,39)" fg:x="212" fg:w="1"/><text x="53.3828%" y="207.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="53.1328%" y="181" width="0.2506%" height="15" fill="rgb(207,178,40)" fg:x="212" fg:w="1"/><text x="53.3828%" y="191.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="53.1328%" y="165" width="0.2506%" height="15" fill="rgb(221,136,13)" fg:x="212" fg:w="1"/><text x="53.3828%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.25%)</title><rect x="53.1328%" y="149" width="0.2506%" height="15" fill="rgb(249,199,10)" fg:x="212" fg:w="1"/><text x="53.3828%" y="159.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::process_state_established (9 samples, 2.26%)</title><rect x="51.3784%" y="373" width="2.2556%" height="15" fill="rgb(249,222,13)" fg:x="205" fg:w="9"/><text x="51.6284%" y="383.50">d..</text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::handle_data (9 samples, 2.26%)</title><rect x="51.3784%" y="357" width="2.2556%" height="15" fill="rgb(244,185,38)" fg:x="205" fg:w="9"/><text x="51.6284%" y="367.50">d..</text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::tcp_send_packet (7 samples, 1.75%)</title><rect x="51.8797%" y="341" width="1.7544%" height="15" fill="rgb(236,202,9)" fg:x="207" fg:w="7"/><text x="52.1297%" y="351.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_ip_packet (7 samples, 1.75%)</title><rect x="51.8797%" y="325" width="1.7544%" height="15" fill="rgb(250,229,37)" fg:x="207" fg:w="7"/><text x="52.1297%" y="335.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_lan_local_ip_packet (7 samples, 1.75%)</title><rect x="51.8797%" y="309" width="1.7544%" height="15" fill="rgb(206,174,23)" fg:x="207" fg:w="7"/><text x="52.1297%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.25%)</title><rect x="53.3835%" y="293" width="0.2506%" height="15" fill="rgb(211,33,43)" fg:x="213" fg:w="1"/><text x="53.6335%" y="303.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_ip_packet (1 samples, 0.25%)</title><rect x="53.6341%" y="357" width="0.2506%" height="15" fill="rgb(245,58,50)" fg:x="214" fg:w="1"/><text x="53.8841%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.25%)</title><rect x="53.8847%" y="229" width="0.2506%" height="15" fill="rgb(244,68,36)" fg:x="215" fg:w="1"/><text x="54.1347%" y="239.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (2 samples, 0.50%)</title><rect x="53.8847%" y="309" width="0.5013%" height="15" fill="rgb(232,229,15)" fg:x="215" fg:w="2"/><text x="54.1347%" y="319.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.50%)</title><rect x="53.8847%" y="293" width="0.5013%" height="15" fill="rgb(254,30,23)" fg:x="215" fg:w="2"/><text x="54.1347%" y="303.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::finish_grow (2 samples, 0.50%)</title><rect x="53.8847%" y="277" width="0.5013%" height="15" fill="rgb(235,160,14)" fg:x="215" fg:w="2"/><text x="54.1347%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.50%)</title><rect x="53.8847%" y="261" width="0.5013%" height="15" fill="rgb(212,155,44)" fg:x="215" fg:w="2"/><text x="54.1347%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.50%)</title><rect x="53.8847%" y="245" width="0.5013%" height="15" fill="rgb(226,2,50)" fg:x="215" fg:w="2"/><text x="54.1347%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.25%)</title><rect x="54.1353%" y="229" width="0.2506%" height="15" fill="rgb(234,177,6)" fg:x="216" fg:w="1"/><text x="54.3853%" y="239.50"></text></g><g><title>dns-tcp-network`inet::tcp::TransmissionControlBlock::ip_packet_for (3 samples, 0.75%)</title><rect x="53.8847%" y="357" width="0.7519%" height="15" fill="rgb(217,24,9)" fg:x="215" fg:w="3"/><text x="54.1347%" y="367.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::tcp::TcpPacket as bytepack::ToBytestream&gt;::to_bytestream (3 samples, 0.75%)</title><rect x="53.8847%" y="341" width="0.7519%" height="15" fill="rgb(220,13,46)" fg:x="215" fg:w="3"/><text x="54.1347%" y="351.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (3 samples, 0.75%)</title><rect x="53.8847%" y="325" width="0.7519%" height="15" fill="rgb(239,221,27)" fg:x="215" fg:w="3"/><text x="54.1347%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.25%)</title><rect x="54.3860%" y="309" width="0.2506%" height="15" fill="rgb(222,198,25)" fg:x="217" fg:w="1"/><text x="54.6360%" y="319.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::handle_data (1 samples, 0.25%)</title><rect x="54.6366%" y="357" width="0.2506%" height="15" fill="rgb(211,99,13)" fg:x="218" fg:w="1"/><text x="54.8866%" y="367.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::blocks::EPB as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="54.8872%" y="261" width="0.2506%" height="15" fill="rgb(232,111,31)" fg:x="219" fg:w="1"/><text x="55.1372%" y="271.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="54.8872%" y="245" width="0.2506%" height="15" fill="rgb(245,82,37)" fg:x="219" fg:w="1"/><text x="55.1372%" y="255.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (1 samples, 0.25%)</title><rect x="54.8872%" y="229" width="0.2506%" height="15" fill="rgb(227,149,46)" fg:x="219" fg:w="1"/><text x="55.1372%" y="239.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="54.8872%" y="213" width="0.2506%" height="15" fill="rgb(218,36,50)" fg:x="219" fg:w="1"/><text x="55.1372%" y="223.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="54.8872%" y="197" width="0.2506%" height="15" fill="rgb(226,80,48)" fg:x="219" fg:w="1"/><text x="55.1372%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.25%)</title><rect x="54.8872%" y="181" width="0.2506%" height="15" fill="rgb(238,224,15)" fg:x="219" fg:w="1"/><text x="55.1372%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.25%)</title><rect x="54.8872%" y="165" width="0.2506%" height="15" fill="rgb(241,136,10)" fg:x="219" fg:w="1"/><text x="55.1372%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.25%)</title><rect x="54.8872%" y="149" width="0.2506%" height="15" fill="rgb(208,32,45)" fg:x="219" fg:w="1"/><text x="55.1372%" y="159.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::process_state_fin_wait1 (7 samples, 1.75%)</title><rect x="53.6341%" y="373" width="1.7544%" height="15" fill="rgb(207,135,9)" fg:x="214" fg:w="7"/><text x="53.8841%" y="383.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::tcp_send_packet (2 samples, 0.50%)</title><rect x="54.8872%" y="357" width="0.5013%" height="15" fill="rgb(206,86,44)" fg:x="219" fg:w="2"/><text x="55.1372%" y="367.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_ip_packet (2 samples, 0.50%)</title><rect x="54.8872%" y="341" width="0.5013%" height="15" fill="rgb(245,177,15)" fg:x="219" fg:w="2"/><text x="55.1372%" y="351.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_lan_local_ip_packet (2 samples, 0.50%)</title><rect x="54.8872%" y="325" width="0.5013%" height="15" fill="rgb(206,64,50)" fg:x="219" fg:w="2"/><text x="55.1372%" y="335.50"></text></g><g><title>dns-tcp-network`inet::interface::Interface::send (2 samples, 0.50%)</title><rect x="54.8872%" y="309" width="0.5013%" height="15" fill="rgb(234,36,40)" fg:x="219" fg:w="2"/><text x="55.1372%" y="319.50"></text></g><g><title>dns-tcp-network`inet::libpcap::capture (2 samples, 0.50%)</title><rect x="54.8872%" y="293" width="0.5013%" height="15" fill="rgb(213,64,8)" fg:x="219" fg:w="2"/><text x="55.1372%" y="303.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::LibPcapDeamon as inet::libpcap::PcapSubscriber&gt;::capture (2 samples, 0.50%)</title><rect x="54.8872%" y="277" width="0.5013%" height="15" fill="rgb(210,75,36)" fg:x="219" fg:w="2"/><text x="55.1372%" y="287.50"></text></g><g><title>dns-tcp-network`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (1 samples, 0.25%)</title><rect x="55.1378%" y="261" width="0.2506%" height="15" fill="rgb(229,88,21)" fg:x="220" fg:w="1"/><text x="55.3878%" y="271.50"></text></g><g><title>dns-tcp-network`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.25%)</title><rect x="55.1378%" y="245" width="0.2506%" height="15" fill="rgb(252,204,47)" fg:x="220" fg:w="1"/><text x="55.3878%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.25%)</title><rect x="55.1378%" y="229" width="0.2506%" height="15" fill="rgb(208,77,27)" fg:x="220" fg:w="1"/><text x="55.3878%" y="239.50"></text></g><g><title>dns-tcp-network`des::net::message::MessageBuilder::content (1 samples, 0.25%)</title><rect x="55.3885%" y="357" width="0.2506%" height="15" fill="rgb(221,76,26)" fg:x="221" fg:w="1"/><text x="55.6385%" y="367.50"></text></g><g><title>dns-tcp-network`inet::tcp::TransmissionControlBlock::ip_packet_for (1 samples, 0.25%)</title><rect x="55.6391%" y="357" width="0.2506%" height="15" fill="rgb(225,139,18)" fg:x="222" fg:w="1"/><text x="55.8891%" y="367.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::tcp::TcpPacket as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="55.6391%" y="341" width="0.2506%" height="15" fill="rgb(230,137,11)" fg:x="222" fg:w="1"/><text x="55.8891%" y="351.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="55.6391%" y="325" width="0.2506%" height="15" fill="rgb(212,28,1)" fg:x="222" fg:w="1"/><text x="55.8891%" y="335.50"></text></g><g><title>dns-tcp-network`DYLD-STUB$$memcpy (1 samples, 0.25%)</title><rect x="55.6391%" y="309" width="0.2506%" height="15" fill="rgb(248,164,17)" fg:x="222" fg:w="1"/><text x="55.8891%" y="319.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::process_state_listen (3 samples, 0.75%)</title><rect x="55.3885%" y="373" width="0.7519%" height="15" fill="rgb(222,171,42)" fg:x="221" fg:w="3"/><text x="55.6385%" y="383.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::tcp_send_packet (1 samples, 0.25%)</title><rect x="55.8897%" y="357" width="0.2506%" height="15" fill="rgb(243,84,45)" fg:x="223" fg:w="1"/><text x="56.1397%" y="367.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_ip_packet (1 samples, 0.25%)</title><rect x="55.8897%" y="341" width="0.2506%" height="15" fill="rgb(252,49,23)" fg:x="223" fg:w="1"/><text x="56.1397%" y="351.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_lan_local_ip_packet (1 samples, 0.25%)</title><rect x="55.8897%" y="325" width="0.2506%" height="15" fill="rgb(215,19,7)" fg:x="223" fg:w="1"/><text x="56.1397%" y="335.50"></text></g><g><title>dns-tcp-network`inet::interface::Interface::send (1 samples, 0.25%)</title><rect x="55.8897%" y="309" width="0.2506%" height="15" fill="rgb(238,81,41)" fg:x="223" fg:w="1"/><text x="56.1397%" y="319.50"></text></g><g><title>dns-tcp-network`inet::libpcap::capture (1 samples, 0.25%)</title><rect x="55.8897%" y="293" width="0.2506%" height="15" fill="rgb(210,199,37)" fg:x="223" fg:w="1"/><text x="56.1397%" y="303.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::LibPcapDeamon as inet::libpcap::PcapSubscriber&gt;::capture (1 samples, 0.25%)</title><rect x="55.8897%" y="277" width="0.2506%" height="15" fill="rgb(244,192,49)" fg:x="223" fg:w="1"/><text x="56.1397%" y="287.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="55.8897%" y="261" width="0.2506%" height="15" fill="rgb(226,211,11)" fg:x="223" fg:w="1"/><text x="56.1397%" y="271.50"></text></g><g><title>dns-tcp-network`inet::interface::device::NetworkDevice::send (1 samples, 0.25%)</title><rect x="56.1404%" y="293" width="0.2506%" height="15" fill="rgb(236,162,54)" fg:x="224" fg:w="1"/><text x="56.3904%" y="303.50"></text></g><g><title>dns-tcp-network`des::net::message::api::send (1 samples, 0.25%)</title><rect x="56.1404%" y="277" width="0.2506%" height="15" fill="rgb(220,229,9)" fg:x="224" fg:w="1"/><text x="56.3904%" y="287.50"></text></g><g><title>dns-tcp-network`des::net::runtime::ctx::buf_send_at (1 samples, 0.25%)</title><rect x="56.1404%" y="261" width="0.2506%" height="15" fill="rgb(250,87,22)" fg:x="224" fg:w="1"/><text x="56.3904%" y="271.50"></text></g><g><title>dns-tcp-network`des::net::runtime::events::MessageAtGateEvent::handle_with_sink (1 samples, 0.25%)</title><rect x="56.1404%" y="245" width="0.2506%" height="15" fill="rgb(239,43,17)" fg:x="224" fg:w="1"/><text x="56.3904%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (1 samples, 0.25%)</title><rect x="56.1404%" y="229" width="0.2506%" height="15" fill="rgb(231,177,25)" fg:x="224" fg:w="1"/><text x="56.3904%" y="239.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::LibPcapDeamon as inet::libpcap::PcapSubscriber&gt;::capture (1 samples, 0.25%)</title><rect x="56.3910%" y="277" width="0.2506%" height="15" fill="rgb(219,179,1)" fg:x="225" fg:w="1"/><text x="56.6410%" y="287.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="56.3910%" y="261" width="0.2506%" height="15" fill="rgb(238,219,53)" fg:x="225" fg:w="1"/><text x="56.6410%" y="271.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::process_state_syn_sent (3 samples, 0.75%)</title><rect x="56.1404%" y="373" width="0.7519%" height="15" fill="rgb(232,167,36)" fg:x="224" fg:w="3"/><text x="56.3904%" y="383.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::tcp_send_packet (3 samples, 0.75%)</title><rect x="56.1404%" y="357" width="0.7519%" height="15" fill="rgb(244,19,51)" fg:x="224" fg:w="3"/><text x="56.3904%" y="367.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_ip_packet (3 samples, 0.75%)</title><rect x="56.1404%" y="341" width="0.7519%" height="15" fill="rgb(224,6,22)" fg:x="224" fg:w="3"/><text x="56.3904%" y="351.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_lan_local_ip_packet (3 samples, 0.75%)</title><rect x="56.1404%" y="325" width="0.7519%" height="15" fill="rgb(224,145,5)" fg:x="224" fg:w="3"/><text x="56.3904%" y="335.50"></text></g><g><title>dns-tcp-network`inet::interface::Interface::send (3 samples, 0.75%)</title><rect x="56.1404%" y="309" width="0.7519%" height="15" fill="rgb(234,130,49)" fg:x="224" fg:w="3"/><text x="56.3904%" y="319.50"></text></g><g><title>dns-tcp-network`inet::libpcap::capture (2 samples, 0.50%)</title><rect x="56.3910%" y="293" width="0.5013%" height="15" fill="rgb(254,6,2)" fg:x="225" fg:w="2"/><text x="56.6410%" y="303.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="56.6416%" y="277" width="0.2506%" height="15" fill="rgb(208,96,46)" fg:x="226" fg:w="1"/><text x="56.8916%" y="287.50"></text></g><g><title>dns-tcp-network`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.25%)</title><rect x="56.8922%" y="357" width="0.2506%" height="15" fill="rgb(239,3,39)" fg:x="227" fg:w="1"/><text x="57.1422%" y="367.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::return_ctrl (3 samples, 0.75%)</title><rect x="56.8922%" y="373" width="0.7519%" height="15" fill="rgb(233,210,1)" fg:x="227" fg:w="3"/><text x="57.1422%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.50%)</title><rect x="57.1429%" y="357" width="0.5013%" height="15" fill="rgb(244,137,37)" fg:x="228" fg:w="2"/><text x="57.3929%" y="367.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::capture_tcp_packet (33 samples, 8.27%)</title><rect x="49.6241%" y="389" width="8.2707%" height="15" fill="rgb(240,136,2)" fg:x="198" fg:w="33"/><text x="49.8741%" y="399.50">dns-tcp-netw..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.25%)</title><rect x="57.6441%" y="373" width="0.2506%" height="15" fill="rgb(239,18,37)" fg:x="230" fg:w="1"/><text x="57.8941%" y="383.50"></text></g><g><title>dns-tcp-network`inet::udp::_&lt;impl inet::ctx::IOContext&gt;::recv_udp_packet (2 samples, 0.50%)</title><rect x="57.8947%" y="389" width="0.5013%" height="15" fill="rgb(218,185,22)" fg:x="231" fg:w="2"/><text x="58.1447%" y="399.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::udp::UdpPacket as bytepack::FromBytestream&gt;::from_bytestream (2 samples, 0.50%)</title><rect x="57.8947%" y="373" width="0.5013%" height="15" fill="rgb(225,218,4)" fg:x="231" fg:w="2"/><text x="58.1447%" y="383.50"></text></g><g><title>dns-tcp-network`std::io::default_read_to_end (2 samples, 0.50%)</title><rect x="57.8947%" y="357" width="0.5013%" height="15" fill="rgb(230,182,32)" fg:x="231" fg:w="2"/><text x="58.1447%" y="367.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="58.1454%" y="341" width="0.2506%" height="15" fill="rgb(242,56,43)" fg:x="232" fg:w="1"/><text x="58.3954%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.25%)</title><rect x="58.3960%" y="389" width="0.2506%" height="15" fill="rgb(233,99,24)" fg:x="233" fg:w="1"/><text x="58.6460%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.25%)</title><rect x="58.6466%" y="389" width="0.2506%" height="15" fill="rgb(234,209,42)" fg:x="234" fg:w="1"/><text x="58.8966%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.25%)</title><rect x="58.8972%" y="389" width="0.2506%" height="15" fill="rgb(227,7,12)" fg:x="235" fg:w="1"/><text x="59.1472%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.75%)</title><rect x="59.1479%" y="389" width="0.7519%" height="15" fill="rgb(245,203,43)" fg:x="236" fg:w="3"/><text x="59.3979%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 1.75%)</title><rect x="59.8997%" y="389" width="1.7544%" height="15" fill="rgb(238,205,33)" fg:x="239" fg:w="7"/><text x="60.1497%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.25%)</title><rect x="61.6541%" y="389" width="0.2506%" height="15" fill="rgb(231,56,7)" fg:x="246" fg:w="1"/><text x="61.9041%" y="399.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::recv (142 samples, 35.59%)</title><rect x="27.0677%" y="405" width="35.5890%" height="15" fill="rgb(244,186,29)" fg:x="108" fg:w="142"/><text x="27.3177%" y="415.50">dns-tcp-network`inet::ctx::IOContext::recv</text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.75%)</title><rect x="61.9048%" y="389" width="0.7519%" height="15" fill="rgb(234,111,31)" fg:x="247" fg:w="3"/><text x="62.1548%" y="399.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::with_current (143 samples, 35.84%)</title><rect x="27.0677%" y="421" width="35.8396%" height="15" fill="rgb(241,149,10)" fg:x="108" fg:w="143"/><text x="27.3177%" y="431.50">dns-tcp-network`inet::ctx::IOContext::with_current</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.25%)</title><rect x="62.6566%" y="405" width="0.2506%" height="15" fill="rgb(249,206,44)" fg:x="250" fg:w="1"/><text x="62.9066%" y="415.50"></text></g><g><title>dns-tcp-network`&lt;inet::plugin::IOPlugin as des::net::plugin::Plugin&gt;::capture_incoming (145 samples, 36.34%)</title><rect x="26.8170%" y="437" width="36.3409%" height="15" fill="rgb(251,153,30)" fg:x="107" fg:w="145"/><text x="27.0670%" y="447.50">dns-tcp-network`&lt;inet::plugin::IOPlugin as des::net::plugin..</text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.25%)</title><rect x="62.9073%" y="421" width="0.2506%" height="15" fill="rgb(239,152,38)" fg:x="251" fg:w="1"/><text x="63.1573%" y="431.50"></text></g><g><title>dns-tcp-network`des::net::plugin::registry::PluginRegistry::being_upstream (2 samples, 0.50%)</title><rect x="63.1579%" y="437" width="0.5013%" height="15" fill="rgb(249,139,47)" fg:x="252" fg:w="2"/><text x="63.4079%" y="447.50"></text></g><g><title>dns-tcp-network`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="63.4085%" y="421" width="0.2506%" height="15" fill="rgb(244,64,35)" fg:x="253" fg:w="1"/><text x="63.6585%" y="431.50"></text></g><g><title>dns-tcp-network`des::net::runtime::events::_&lt;impl des::net::module::reference::ModuleRef&gt;::plugin_upstream (150 samples, 37.59%)</title><rect x="26.3158%" y="453" width="37.5940%" height="15" fill="rgb(216,46,15)" fg:x="105" fg:w="150"/><text x="26.5658%" y="463.50">dns-tcp-network`des::net::runtime::events::_&lt;impl des::net::m..</text></g><g><title>dns-tcp-network`inet::ctx::IOContext::swap_in (1 samples, 0.25%)</title><rect x="63.6591%" y="437" width="0.2506%" height="15" fill="rgb(250,74,19)" fg:x="254" fg:w="1"/><text x="63.9091%" y="447.50"></text></g><g><title>dns-tcp-network`des::net::module::ctx::async_get_rt (2 samples, 0.50%)</title><rect x="63.9098%" y="437" width="0.5013%" height="15" fill="rgb(249,42,33)" fg:x="255" fg:w="2"/><text x="64.1598%" y="447.50"></text></g><g><title>dns-tcp-network`des::net::module::ext::core::Rt::current (2 samples, 0.50%)</title><rect x="63.9098%" y="421" width="0.5013%" height="15" fill="rgb(242,149,17)" fg:x="255" fg:w="2"/><text x="64.1598%" y="431.50"></text></g><g><title>dns-tcp-network`tokio::runtime::context::enter_runtime (1 samples, 0.25%)</title><rect x="64.4110%" y="437" width="0.2506%" height="15" fill="rgb(244,29,21)" fg:x="257" fg:w="1"/><text x="64.6610%" y="447.50"></text></g><g><title>dns-tcp-network`tokio::runtime::handle::Handle::enter (1 samples, 0.25%)</title><rect x="64.6617%" y="437" width="0.2506%" height="15" fill="rgb(220,130,37)" fg:x="258" fg:w="1"/><text x="64.9117%" y="447.50"></text></g><g><title>dns-tcp-network`&lt;tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set::Reset as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="64.9123%" y="421" width="0.2506%" height="15" fill="rgb(211,67,2)" fg:x="259" fg:w="1"/><text x="65.1623%" y="431.50"></text></g><g><title>dns-tcp-network`&lt;tokio::runtime::context::SetCurrentGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.50%)</title><rect x="65.1629%" y="421" width="0.5013%" height="15" fill="rgb(235,68,52)" fg:x="260" fg:w="2"/><text x="65.4129%" y="431.50"></text></g><g><title>dns-tcp-network`&lt;tokio::runtime::scheduler::current_thread::CoreGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="65.6642%" y="421" width="0.2506%" height="15" fill="rgb(246,142,3)" fg:x="262" fg:w="1"/><text x="65.9142%" y="431.50"></text></g><g><title>dns-tcp-network`&lt;tokio::runtime::context::EnterRuntimeGuard as core::ops::drop::Drop&gt;::drop (3 samples, 0.75%)</title><rect x="65.9148%" y="405" width="0.7519%" height="15" fill="rgb(241,25,7)" fg:x="263" fg:w="3"/><text x="66.1648%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.50%)</title><rect x="66.1654%" y="389" width="0.5013%" height="15" fill="rgb(242,119,39)" fg:x="264" fg:w="2"/><text x="66.4154%" y="399.50"></text></g><g><title>dns-tcp-network`&lt;tokio::runtime::context::SetCurrentGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="66.6667%" y="405" width="0.2506%" height="15" fill="rgb(241,98,45)" fg:x="266" fg:w="1"/><text x="66.9167%" y="415.50"></text></g><g><title>dns-tcp-network`core::ptr::drop_in_place&lt;tokio::runtime::context::EnterRuntimeGuard&gt; (5 samples, 1.25%)</title><rect x="65.9148%" y="421" width="1.2531%" height="15" fill="rgb(254,28,30)" fg:x="263" fg:w="5"/><text x="66.1648%" y="431.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.25%)</title><rect x="66.9173%" y="405" width="0.2506%" height="15" fill="rgb(241,142,54)" fg:x="267" fg:w="1"/><text x="67.1673%" y="415.50"></text></g><g><title>dns-tcp-network`core::ptr::drop_in_place&lt;tokio::runtime::scheduler::current_thread::CoreGuard&gt; (2 samples, 0.50%)</title><rect x="67.1679%" y="421" width="0.5013%" height="15" fill="rgb(222,85,15)" fg:x="268" fg:w="2"/><text x="67.4179%" y="431.50"></text></g><g><title>dns-tcp-network`&lt;tokio::runtime::scheduler::current_thread::CoreGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="67.4185%" y="405" width="0.2506%" height="15" fill="rgb(210,85,47)" fg:x="269" fg:w="1"/><text x="67.6685%" y="415.50"></text></g><g><title>dns-tcp-network`&lt;tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set::Reset as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="67.6692%" y="405" width="0.2506%" height="15" fill="rgb(224,206,25)" fg:x="270" fg:w="1"/><text x="67.9192%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.25%)</title><rect x="67.6692%" y="389" width="0.2506%" height="15" fill="rgb(243,201,19)" fg:x="270" fg:w="1"/><text x="67.9192%" y="399.50"></text></g><g><title>dns-tcp-network`&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="67.9198%" y="405" width="0.2506%" height="15" fill="rgb(236,59,4)" fg:x="271" fg:w="1"/><text x="68.1698%" y="415.50"></text></g><g><title>dns-tcp-network`tokio::runtime::park::Inner::park_timeout (1 samples, 0.25%)</title><rect x="68.1704%" y="405" width="0.2506%" height="15" fill="rgb(254,179,45)" fg:x="272" fg:w="1"/><text x="68.4204%" y="415.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::CURRENT::FOO::__getit (2 samples, 0.50%)</title><rect x="68.4211%" y="405" width="0.5013%" height="15" fill="rgb(226,14,10)" fg:x="273" fg:w="2"/><text x="68.6711%" y="415.50"></text></g><g><title>dns-tcp-network`&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.50%)</title><rect x="69.1729%" y="389" width="0.5013%" height="15" fill="rgb(244,27,41)" fg:x="276" fg:w="2"/><text x="69.4229%" y="399.50"></text></g><g><title>dns-tcp-network`&lt;tokio::runtime::context::DisallowBlockInPlaceGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="69.9248%" y="373" width="0.2506%" height="15" fill="rgb(235,35,32)" fg:x="279" fg:w="1"/><text x="70.1748%" y="383.50"></text></g><g><title>dns-tcp-network`DYLD-STUB$$malloc (1 samples, 0.25%)</title><rect x="71.1779%" y="325" width="0.2506%" height="15" fill="rgb(218,68,31)" fg:x="284" fg:w="1"/><text x="71.4279%" y="335.50"></text></g><g><title>dns-tcp-network`tokio::runtime::context::with_defer (5 samples, 1.25%)</title><rect x="70.4261%" y="357" width="1.2531%" height="15" fill="rgb(207,120,37)" fg:x="281" fg:w="5"/><text x="70.6761%" y="367.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.75%)</title><rect x="70.9273%" y="341" width="0.7519%" height="15" fill="rgb(227,98,0)" fg:x="283" fg:w="3"/><text x="71.1773%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.25%)</title><rect x="71.4286%" y="325" width="0.2506%" height="15" fill="rgb(207,7,3)" fg:x="285" fg:w="1"/><text x="71.6786%" y="335.50"></text></g><g><title>dns-tcp-network`tokio::util::wake::clone_arc_raw (2 samples, 0.50%)</title><rect x="71.6792%" y="357" width="0.5013%" height="15" fill="rgb(206,98,19)" fg:x="286" fg:w="2"/><text x="71.9292%" y="367.50"></text></g><g><title>dns-tcp-network`&lt;tokio::task::yield_now::yield_now::{{closure}}::YieldNow as core::future::future::Future&gt;::poll (9 samples, 2.26%)</title><rect x="70.1754%" y="373" width="2.2556%" height="15" fill="rgb(217,5,26)" fg:x="280" fg:w="9"/><text x="70.4254%" y="383.50">d..</text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.25%)</title><rect x="72.1805%" y="357" width="0.2506%" height="15" fill="rgb(235,190,38)" fg:x="288" fg:w="1"/><text x="72.4305%" y="367.50"></text></g><g><title>dns-tcp-network`tokio::runtime::context::disallow_block_in_place (1 samples, 0.25%)</title><rect x="72.4311%" y="373" width="0.2506%" height="15" fill="rgb(247,86,24)" fg:x="289" fg:w="1"/><text x="72.6811%" y="383.50"></text></g><g><title>dns-tcp-network`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (2 samples, 0.50%)</title><rect x="72.6817%" y="373" width="0.5013%" height="15" fill="rgb(205,101,16)" fg:x="290" fg:w="2"/><text x="72.9317%" y="383.50"></text></g><g><title>dns-tcp-network`tokio::task::local::LocalSet::tick (2 samples, 0.50%)</title><rect x="73.1830%" y="373" width="0.5013%" height="15" fill="rgb(246,168,33)" fg:x="292" fg:w="2"/><text x="73.4330%" y="383.50"></text></g><g><title>dns-tcp-network`&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 4.26%)</title><rect x="69.6742%" y="389" width="4.2607%" height="15" fill="rgb(231,114,1)" fg:x="278" fg:w="17"/><text x="69.9242%" y="399.50">dns-t..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.25%)</title><rect x="73.6842%" y="373" width="0.2506%" height="15" fill="rgb(207,184,53)" fg:x="294" fg:w="1"/><text x="73.9342%" y="383.50"></text></g><g><title>dns-tcp-network`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (4 samples, 1.00%)</title><rect x="73.9348%" y="389" width="1.0025%" height="15" fill="rgb(224,95,51)" fg:x="295" fg:w="4"/><text x="74.1848%" y="399.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::Context::enter (28 samples, 7.02%)</title><rect x="68.9223%" y="405" width="7.0175%" height="15" fill="rgb(212,188,45)" fg:x="275" fg:w="28"/><text x="69.1723%" y="415.50">dns-tcp-n..</text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 1.00%)</title><rect x="74.9373%" y="389" width="1.0025%" height="15" fill="rgb(223,154,38)" fg:x="299" fg:w="4"/><text x="75.1873%" y="399.50"></text></g><g><title>dns-tcp-network`tokio::runtime::context::with_defer (1 samples, 0.25%)</title><rect x="76.1905%" y="389" width="0.2506%" height="15" fill="rgb(251,22,52)" fg:x="304" fg:w="1"/><text x="76.4405%" y="399.50"></text></g><g><title>dns-tcp-network`tokio::util::wake::wake_arc_raw (1 samples, 0.25%)</title><rect x="76.1905%" y="373" width="0.2506%" height="15" fill="rgb(229,209,22)" fg:x="304" fg:w="1"/><text x="76.4405%" y="383.50"></text></g><g><title>dns-tcp-network`tokio::runtime::park::Inner::park_timeout (1 samples, 0.25%)</title><rect x="76.4411%" y="389" width="0.2506%" height="15" fill="rgb(234,138,34)" fg:x="305" fg:w="1"/><text x="76.6911%" y="399.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::Context::park_yield (4 samples, 1.00%)</title><rect x="75.9398%" y="405" width="1.0025%" height="15" fill="rgb(212,95,11)" fg:x="303" fg:w="4"/><text x="76.1898%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.25%)</title><rect x="76.6917%" y="389" width="0.2506%" height="15" fill="rgb(240,179,47)" fg:x="306" fg:w="1"/><text x="76.9417%" y="399.50"></text></g><g><title>dns-tcp-network`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.25%)</title><rect x="77.1930%" y="389" width="0.2506%" height="15" fill="rgb(240,163,11)" fg:x="308" fg:w="1"/><text x="77.4430%" y="399.50"></text></g><g><title>dns-tcp-network`tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (1 samples, 0.25%)</title><rect x="77.4436%" y="389" width="0.2506%" height="15" fill="rgb(236,37,12)" fg:x="309" fg:w="1"/><text x="77.6936%" y="399.50"></text></g><g><title>dns-tcp-network`&lt;inet::tcp::api::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.50%)</title><rect x="78.1955%" y="341" width="0.5013%" height="15" fill="rgb(232,164,16)" fg:x="312" fg:w="2"/><text x="78.4455%" y="351.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::with_current (2 samples, 0.50%)</title><rect x="78.1955%" y="325" width="0.5013%" height="15" fill="rgb(244,205,15)" fg:x="312" fg:w="2"/><text x="78.4455%" y="335.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::tcp_try_read (1 samples, 0.25%)</title><rect x="78.4461%" y="309" width="0.2506%" height="15" fill="rgb(223,117,47)" fg:x="313" fg:w="1"/><text x="78.6961%" y="319.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::tcp_send_packet (1 samples, 0.25%)</title><rect x="78.4461%" y="293" width="0.2506%" height="15" fill="rgb(244,107,35)" fg:x="313" fg:w="1"/><text x="78.6961%" y="303.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_ip_packet (1 samples, 0.25%)</title><rect x="78.4461%" y="277" width="0.2506%" height="15" fill="rgb(205,140,8)" fg:x="313" fg:w="1"/><text x="78.6961%" y="287.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_lan_local_ip_packet (1 samples, 0.25%)</title><rect x="78.4461%" y="261" width="0.2506%" height="15" fill="rgb(228,84,46)" fg:x="313" fg:w="1"/><text x="78.6961%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.25%)</title><rect x="78.4461%" y="245" width="0.2506%" height="15" fill="rgb(254,188,9)" fg:x="313" fg:w="1"/><text x="78.6961%" y="255.50"></text></g><g><title>dns-tcp-network`inet::tcp::TransmissionControlBlock::ip_packet_for (1 samples, 0.25%)</title><rect x="78.6967%" y="277" width="0.2506%" height="15" fill="rgb(206,112,54)" fg:x="314" fg:w="1"/><text x="78.9467%" y="287.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::tcp::TcpPacket as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="78.6967%" y="261" width="0.2506%" height="15" fill="rgb(216,84,49)" fg:x="314" fg:w="1"/><text x="78.9467%" y="271.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="78.6967%" y="245" width="0.2506%" height="15" fill="rgb(214,194,35)" fg:x="314" fg:w="1"/><text x="78.9467%" y="255.50"></text></g><g><title>dns-tcp-network`&lt;inet::tcp::api::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (3 samples, 0.75%)</title><rect x="78.6967%" y="341" width="0.7519%" height="15" fill="rgb(249,28,3)" fg:x="314" fg:w="3"/><text x="78.9467%" y="351.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::with_current (3 samples, 0.75%)</title><rect x="78.6967%" y="325" width="0.7519%" height="15" fill="rgb(222,56,52)" fg:x="314" fg:w="3"/><text x="78.9467%" y="335.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::tcp_try_write (3 samples, 0.75%)</title><rect x="78.6967%" y="309" width="0.7519%" height="15" fill="rgb(245,217,50)" fg:x="314" fg:w="3"/><text x="78.9467%" y="319.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::do_sending (3 samples, 0.75%)</title><rect x="78.6967%" y="293" width="0.7519%" height="15" fill="rgb(213,201,24)" fg:x="314" fg:w="3"/><text x="78.9467%" y="303.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::tcp_send_packet (2 samples, 0.50%)</title><rect x="78.9474%" y="277" width="0.5013%" height="15" fill="rgb(248,116,28)" fg:x="315" fg:w="2"/><text x="79.1974%" y="287.50"></text></g><g><title>dns-tcp-network`DYLD-STUB$$memmove (1 samples, 0.25%)</title><rect x="79.4486%" y="341" width="0.2506%" height="15" fill="rgb(219,72,43)" fg:x="317" fg:w="1"/><text x="79.6986%" y="351.50"></text></g><g><title>dns-tcp-network`inet::tcp::TransmissionControlBlock::ip_packet_for (1 samples, 0.25%)</title><rect x="79.6992%" y="261" width="0.2506%" height="15" fill="rgb(209,138,14)" fg:x="318" fg:w="1"/><text x="79.9492%" y="271.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::tcp::TcpPacket as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="79.6992%" y="245" width="0.2506%" height="15" fill="rgb(222,18,33)" fg:x="318" fg:w="1"/><text x="79.9492%" y="255.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="79.6992%" y="229" width="0.2506%" height="15" fill="rgb(213,199,7)" fg:x="318" fg:w="1"/><text x="79.9492%" y="239.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (1 samples, 0.25%)</title><rect x="79.6992%" y="213" width="0.2506%" height="15" fill="rgb(250,110,10)" fg:x="318" fg:w="1"/><text x="79.9492%" y="223.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="79.6992%" y="197" width="0.2506%" height="15" fill="rgb(248,123,6)" fg:x="318" fg:w="1"/><text x="79.9492%" y="207.50"></text></g><g><title>dns-tcp-network`__rdl_alloc (1 samples, 0.25%)</title><rect x="79.6992%" y="181" width="0.2506%" height="15" fill="rgb(206,91,31)" fg:x="318" fg:w="1"/><text x="79.9492%" y="191.50"></text></g><g><title>dns-tcp-network`alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.50%)</title><rect x="79.6992%" y="341" width="0.5013%" height="15" fill="rgb(211,154,13)" fg:x="318" fg:w="2"/><text x="79.9492%" y="351.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::try_with_current (2 samples, 0.50%)</title><rect x="79.6992%" y="325" width="0.5013%" height="15" fill="rgb(225,148,7)" fg:x="318" fg:w="2"/><text x="79.9492%" y="335.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::syscall (2 samples, 0.50%)</title><rect x="79.6992%" y="309" width="0.5013%" height="15" fill="rgb(220,160,43)" fg:x="318" fg:w="2"/><text x="79.9492%" y="319.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::process_state_established (2 samples, 0.50%)</title><rect x="79.6992%" y="293" width="0.5013%" height="15" fill="rgb(213,52,39)" fg:x="318" fg:w="2"/><text x="79.9492%" y="303.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::do_sending (2 samples, 0.50%)</title><rect x="79.6992%" y="277" width="0.5013%" height="15" fill="rgb(243,137,7)" fg:x="318" fg:w="2"/><text x="79.9492%" y="287.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::tcp_send_packet (1 samples, 0.25%)</title><rect x="79.9499%" y="261" width="0.2506%" height="15" fill="rgb(230,79,13)" fg:x="319" fg:w="1"/><text x="80.1999%" y="271.50"></text></g><g><title>dns-tcp-network`core::str::lossy::Utf8Chunk::invalid (1 samples, 0.25%)</title><rect x="80.2005%" y="341" width="0.2506%" height="15" fill="rgb(247,105,23)" fg:x="320" fg:w="1"/><text x="80.4505%" y="351.50"></text></g><g><title>dns-tcp-network`inet::tcp::TransmissionControlBlock::new (1 samples, 0.25%)</title><rect x="80.4511%" y="309" width="0.2506%" height="15" fill="rgb(223,179,41)" fg:x="321" fg:w="1"/><text x="80.7011%" y="319.50"></text></g><g><title>dns-tcp-network`inet::tcp::buffer::TcpBuffer::new (1 samples, 0.25%)</title><rect x="80.4511%" y="293" width="0.2506%" height="15" fill="rgb(218,9,34)" fg:x="321" fg:w="1"/><text x="80.7011%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.25%)</title><rect x="80.4511%" y="277" width="0.2506%" height="15" fill="rgb(222,106,8)" fg:x="321" fg:w="1"/><text x="80.7011%" y="287.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.25%)</title><rect x="80.4511%" y="261" width="0.2506%" height="15" fill="rgb(211,220,0)" fg:x="321" fg:w="1"/><text x="80.7011%" y="271.50"></text></g><g><title>dns-tcp-network`inet::tcp::TransmissionControlBlock::ip_packet_for (1 samples, 0.25%)</title><rect x="80.7018%" y="293" width="0.2506%" height="15" fill="rgb(229,52,16)" fg:x="322" fg:w="1"/><text x="80.9518%" y="303.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::tcp::TcpPacket as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="80.7018%" y="277" width="0.2506%" height="15" fill="rgb(212,155,18)" fg:x="322" fg:w="1"/><text x="80.9518%" y="287.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="80.7018%" y="261" width="0.2506%" height="15" fill="rgb(242,21,14)" fg:x="322" fg:w="1"/><text x="80.9518%" y="271.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (1 samples, 0.25%)</title><rect x="80.7018%" y="245" width="0.2506%" height="15" fill="rgb(222,19,48)" fg:x="322" fg:w="1"/><text x="80.9518%" y="255.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="80.7018%" y="229" width="0.2506%" height="15" fill="rgb(232,45,27)" fg:x="322" fg:w="1"/><text x="80.9518%" y="239.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::with_current (3 samples, 0.75%)</title><rect x="80.4511%" y="341" width="0.7519%" height="15" fill="rgb(249,103,42)" fg:x="321" fg:w="3"/><text x="80.7011%" y="351.50"></text></g><g><title>dns-tcp-network`inet::tcp::api::stream::_&lt;impl inet::ctx::IOContext&gt;::tcp_create_and_connect_socket (3 samples, 0.75%)</title><rect x="80.4511%" y="325" width="0.7519%" height="15" fill="rgb(246,81,33)" fg:x="321" fg:w="3"/><text x="80.7011%" y="335.50"></text></g><g><title>dns-tcp-network`inet::tcp::_&lt;impl inet::ctx::IOContext&gt;::process_state_closed (2 samples, 0.50%)</title><rect x="80.7018%" y="309" width="0.5013%" height="15" fill="rgb(252,33,42)" fg:x="322" fg:w="2"/><text x="80.9518%" y="319.50"></text></g><g><title>dns-tcp-network`tracing::span::Span::record_all (1 samples, 0.25%)</title><rect x="80.9524%" y="293" width="0.2506%" height="15" fill="rgb(209,212,41)" fg:x="323" fg:w="1"/><text x="81.2024%" y="303.50"></text></g><g><title>dns-tcp-network`&lt;des::tracing::Subscriber&lt;P&gt; as tracing_core::subscriber::Subscriber&gt;::record (1 samples, 0.25%)</title><rect x="80.9524%" y="277" width="0.2506%" height="15" fill="rgb(207,154,6)" fg:x="323" fg:w="1"/><text x="81.2024%" y="287.50"></text></g><g><title>dns-tcp-network`des::tracing::span::SpanFields::record (1 samples, 0.25%)</title><rect x="80.9524%" y="261" width="0.2506%" height="15" fill="rgb(223,64,47)" fg:x="323" fg:w="1"/><text x="81.2024%" y="271.50"></text></g><g><title>dns-tcp-network`tracing_core::span::Record::record (1 samples, 0.25%)</title><rect x="80.9524%" y="245" width="0.2506%" height="15" fill="rgb(211,161,38)" fg:x="323" fg:w="1"/><text x="81.2024%" y="255.50"></text></g><g><title>dns-tcp-network`&lt;des::tracing::span::Vis as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.25%)</title><rect x="80.9524%" y="229" width="0.2506%" height="15" fill="rgb(219,138,40)" fg:x="323" fg:w="1"/><text x="81.2024%" y="239.50"></text></g><g><title>dns-tcp-network`alloc::fmt::format::format_inner (1 samples, 0.25%)</title><rect x="80.9524%" y="213" width="0.2506%" height="15" fill="rgb(241,228,46)" fg:x="323" fg:w="1"/><text x="81.2024%" y="223.50"></text></g><g><title>dns-tcp-network`core::fmt::write (1 samples, 0.25%)</title><rect x="80.9524%" y="197" width="0.2506%" height="15" fill="rgb(223,209,38)" fg:x="323" fg:w="1"/><text x="81.2024%" y="207.50"></text></g><g><title>dns-tcp-network`&lt;core::net::socket_addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (1 samples, 0.25%)</title><rect x="80.9524%" y="181" width="0.2506%" height="15" fill="rgb(236,164,45)" fg:x="323" fg:w="1"/><text x="81.2024%" y="191.50"></text></g><g><title>dns-tcp-network`core::fmt::write (1 samples, 0.25%)</title><rect x="80.9524%" y="165" width="0.2506%" height="15" fill="rgb(231,15,5)" fg:x="323" fg:w="1"/><text x="81.2024%" y="175.50"></text></g><g><title>dns-tcp-network`&lt;core::net::ip_addr::Ipv4Addr as core::fmt::Display&gt;::fmt (1 samples, 0.25%)</title><rect x="80.9524%" y="149" width="0.2506%" height="15" fill="rgb(252,35,15)" fg:x="323" fg:w="1"/><text x="81.2024%" y="159.50"></text></g><g><title>dns-tcp-network`core::fmt::write (1 samples, 0.25%)</title><rect x="80.9524%" y="133" width="0.2506%" height="15" fill="rgb(248,181,18)" fg:x="323" fg:w="1"/><text x="81.2024%" y="143.50"></text></g><g><title>dns-tcp-network`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.25%)</title><rect x="80.9524%" y="117" width="0.2506%" height="15" fill="rgb(233,39,42)" fg:x="323" fg:w="1"/><text x="81.2024%" y="127.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::dns::pkt::DNSMessage as bytepack::FromBytestream&gt;::from_bytestream (2 samples, 0.50%)</title><rect x="81.2030%" y="325" width="0.5013%" height="15" fill="rgb(238,110,33)" fg:x="324" fg:w="2"/><text x="81.4530%" y="335.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::dns::pkt::DNSQuestion as bytepack::FromBytestream&gt;::from_bytestream (2 samples, 0.50%)</title><rect x="81.2030%" y="309" width="0.5013%" height="15" fill="rgb(233,195,10)" fg:x="324" fg:w="2"/><text x="81.4530%" y="319.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::dns::string::DNSString as bytepack::FromBytestream&gt;::from_bytestream (2 samples, 0.50%)</title><rect x="81.2030%" y="293" width="0.5013%" height="15" fill="rgb(254,105,3)" fg:x="324" fg:w="2"/><text x="81.4530%" y="303.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.25%)</title><rect x="81.4536%" y="277" width="0.2506%" height="15" fill="rgb(221,225,9)" fg:x="325" fg:w="1"/><text x="81.7036%" y="287.50"></text></g><g><title>dns-tcp-network`__rdl_realloc (1 samples, 0.25%)</title><rect x="81.4536%" y="261" width="0.2506%" height="15" fill="rgb(224,227,45)" fg:x="325" fg:w="1"/><text x="81.7036%" y="271.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::dns::pkt::DNSQuestion as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="81.7043%" y="309" width="0.2506%" height="15" fill="rgb(229,198,43)" fg:x="326" fg:w="1"/><text x="81.9543%" y="319.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="81.7043%" y="293" width="0.2506%" height="15" fill="rgb(206,209,35)" fg:x="326" fg:w="1"/><text x="81.9543%" y="303.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (1 samples, 0.25%)</title><rect x="81.7043%" y="277" width="0.2506%" height="15" fill="rgb(245,195,53)" fg:x="326" fg:w="1"/><text x="81.9543%" y="287.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="81.7043%" y="261" width="0.2506%" height="15" fill="rgb(240,92,26)" fg:x="326" fg:w="1"/><text x="81.9543%" y="271.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="81.7043%" y="245" width="0.2506%" height="15" fill="rgb(207,40,23)" fg:x="326" fg:w="1"/><text x="81.9543%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.25%)</title><rect x="81.7043%" y="229" width="0.2506%" height="15" fill="rgb(223,111,35)" fg:x="326" fg:w="1"/><text x="81.9543%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.25%)</title><rect x="81.7043%" y="213" width="0.2506%" height="15" fill="rgb(229,147,28)" fg:x="326" fg:w="1"/><text x="81.9543%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.25%)</title><rect x="81.7043%" y="197" width="0.2506%" height="15" fill="rgb(211,29,28)" fg:x="326" fg:w="1"/><text x="81.9543%" y="207.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::dns::record::DNSResourceRecord as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="81.9549%" y="309" width="0.2506%" height="15" fill="rgb(228,72,33)" fg:x="327" fg:w="1"/><text x="82.2049%" y="319.50"></text></g><g><title>dns-tcp-network`inet_types::dns::string::DNSString::label (1 samples, 0.25%)</title><rect x="81.9549%" y="293" width="0.2506%" height="15" fill="rgb(205,214,31)" fg:x="327" fg:w="1"/><text x="82.2049%" y="303.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::dns::pkt::DNSMessage as bytepack::ToBytestream&gt;::to_bytestream (3 samples, 0.75%)</title><rect x="81.7043%" y="325" width="0.7519%" height="15" fill="rgb(224,111,15)" fg:x="326" fg:w="3"/><text x="81.9543%" y="335.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="82.2055%" y="309" width="0.2506%" height="15" fill="rgb(253,21,26)" fg:x="328" fg:w="1"/><text x="82.4555%" y="319.50"></text></g><g><title>dns-tcp-network`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.25%)</title><rect x="82.4561%" y="293" width="0.2506%" height="15" fill="rgb(245,139,43)" fg:x="329" fg:w="1"/><text x="82.7061%" y="303.50"></text></g><g><title>dns-tcp-network`core::ptr::drop_in_place&lt;inet_types::dns::pkt::DNSMessage&gt; (1 samples, 0.25%)</title><rect x="82.7068%" y="293" width="0.2506%" height="15" fill="rgb(252,170,7)" fg:x="330" fg:w="1"/><text x="82.9568%" y="303.50"></text></g><g><title>dns-tcp-network`inet::dns::nameserver::DNSNameserver::handle_request (5 samples, 1.25%)</title><rect x="82.4561%" y="309" width="1.2531%" height="15" fill="rgb(231,118,14)" fg:x="329" fg:w="5"/><text x="82.7061%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.75%)</title><rect x="82.9574%" y="293" width="0.7519%" height="15" fill="rgb(238,83,0)" fg:x="331" fg:w="3"/><text x="83.2074%" y="303.50"></text></g><g><title>dns-tcp-network`inet::dns::nameserver::DNSNameserver::handle (6 samples, 1.50%)</title><rect x="82.4561%" y="325" width="1.5038%" height="15" fill="rgb(221,39,39)" fg:x="329" fg:w="6"/><text x="82.7061%" y="335.50"></text></g><g><title>dns-tcp-network`inet_types::dns::string::DNSString::labels (1 samples, 0.25%)</title><rect x="83.7093%" y="309" width="0.2506%" height="15" fill="rgb(222,119,46)" fg:x="334" fg:w="1"/><text x="83.9593%" y="319.50"></text></g><g><title>dns-tcp-network`inet::udp::api::UdpSocket::recv_from::_{{closure}} (1 samples, 0.25%)</title><rect x="83.9599%" y="325" width="0.2506%" height="15" fill="rgb(222,165,49)" fg:x="335" fg:w="1"/><text x="84.2099%" y="335.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::blocks::EPB as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="84.7118%" y="197" width="0.2506%" height="15" fill="rgb(219,113,52)" fg:x="338" fg:w="1"/><text x="84.9618%" y="207.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="84.7118%" y="181" width="0.2506%" height="15" fill="rgb(214,7,15)" fg:x="338" fg:w="1"/><text x="84.9618%" y="191.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (1 samples, 0.25%)</title><rect x="84.7118%" y="165" width="0.2506%" height="15" fill="rgb(235,32,4)" fg:x="338" fg:w="1"/><text x="84.9618%" y="175.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="84.7118%" y="149" width="0.2506%" height="15" fill="rgb(238,90,54)" fg:x="338" fg:w="1"/><text x="84.9618%" y="159.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="84.7118%" y="133" width="0.2506%" height="15" fill="rgb(213,208,19)" fg:x="338" fg:w="1"/><text x="84.9618%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.25%)</title><rect x="84.7118%" y="117" width="0.2506%" height="15" fill="rgb(233,156,4)" fg:x="338" fg:w="1"/><text x="84.9618%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.25%)</title><rect x="84.7118%" y="101" width="0.2506%" height="15" fill="rgb(207,194,5)" fg:x="338" fg:w="1"/><text x="84.9618%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.25%)</title><rect x="84.7118%" y="85" width="0.2506%" height="15" fill="rgb(206,111,30)" fg:x="338" fg:w="1"/><text x="84.9618%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.25%)</title><rect x="84.7118%" y="69" width="0.2506%" height="15" fill="rgb(243,70,54)" fg:x="338" fg:w="1"/><text x="84.9618%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.25%)</title><rect x="84.7118%" y="53" width="0.2506%" height="15" fill="rgb(242,28,8)" fg:x="338" fg:w="1"/><text x="84.9618%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.25%)</title><rect x="84.7118%" y="37" width="0.2506%" height="15" fill="rgb(219,106,18)" fg:x="338" fg:w="1"/><text x="84.9618%" y="47.50"></text></g><g><title>dns-tcp-network`inet_pcap::LibPcapDeamon::write_l3_packet (1 samples, 0.25%)</title><rect x="84.9624%" y="197" width="0.2506%" height="15" fill="rgb(244,222,10)" fg:x="339" fg:w="1"/><text x="85.2124%" y="207.50"></text></g><g><title>dns-tcp-network`&lt;inet_types::ip::v4::Ipv4Packet as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="84.9624%" y="181" width="0.2506%" height="15" fill="rgb(236,179,52)" fg:x="339" fg:w="1"/><text x="85.2124%" y="191.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="84.9624%" y="165" width="0.2506%" height="15" fill="rgb(213,23,39)" fg:x="339" fg:w="1"/><text x="85.2124%" y="175.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (1 samples, 0.25%)</title><rect x="84.9624%" y="149" width="0.2506%" height="15" fill="rgb(238,48,10)" fg:x="339" fg:w="1"/><text x="85.2124%" y="159.50"></text></g><g><title>dns-tcp-network`inet::udp::api::UdpSocket::send_to::_{{closure}} (5 samples, 1.25%)</title><rect x="84.2105%" y="325" width="1.2531%" height="15" fill="rgb(251,196,23)" fg:x="336" fg:w="5"/><text x="84.4605%" y="335.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::with_current (5 samples, 1.25%)</title><rect x="84.2105%" y="309" width="1.2531%" height="15" fill="rgb(250,152,24)" fg:x="336" fg:w="5"/><text x="84.4605%" y="319.50"></text></g><g><title>dns-tcp-network`inet::udp::_&lt;impl inet::ctx::IOContext&gt;::udp_send_to (5 samples, 1.25%)</title><rect x="84.2105%" y="293" width="1.2531%" height="15" fill="rgb(209,150,17)" fg:x="336" fg:w="5"/><text x="84.4605%" y="303.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_ip_packet (5 samples, 1.25%)</title><rect x="84.2105%" y="277" width="1.2531%" height="15" fill="rgb(234,202,34)" fg:x="336" fg:w="5"/><text x="84.4605%" y="287.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_lan_local_ip_packet (4 samples, 1.00%)</title><rect x="84.4612%" y="261" width="1.0025%" height="15" fill="rgb(253,148,53)" fg:x="337" fg:w="4"/><text x="84.7112%" y="271.50"></text></g><g><title>dns-tcp-network`inet::interface::Interface::send (4 samples, 1.00%)</title><rect x="84.4612%" y="245" width="1.0025%" height="15" fill="rgb(218,129,16)" fg:x="337" fg:w="4"/><text x="84.7112%" y="255.50"></text></g><g><title>dns-tcp-network`inet::libpcap::capture (4 samples, 1.00%)</title><rect x="84.4612%" y="229" width="1.0025%" height="15" fill="rgb(216,85,19)" fg:x="337" fg:w="4"/><text x="84.7112%" y="239.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::LibPcapDeamon as inet::libpcap::PcapSubscriber&gt;::capture (4 samples, 1.00%)</title><rect x="84.4612%" y="213" width="1.0025%" height="15" fill="rgb(235,228,7)" fg:x="337" fg:w="4"/><text x="84.7112%" y="223.50"></text></g><g><title>dns-tcp-network`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (1 samples, 0.25%)</title><rect x="85.2130%" y="197" width="0.2506%" height="15" fill="rgb(245,175,0)" fg:x="340" fg:w="1"/><text x="85.4630%" y="207.50"></text></g><g><title>dns-tcp-network`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.25%)</title><rect x="85.2130%" y="181" width="0.2506%" height="15" fill="rgb(208,168,36)" fg:x="340" fg:w="1"/><text x="85.4630%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.25%)</title><rect x="85.2130%" y="165" width="0.2506%" height="15" fill="rgb(246,171,24)" fg:x="340" fg:w="1"/><text x="85.4630%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.25%)</title><rect x="85.4637%" y="325" width="0.2506%" height="15" fill="rgb(215,142,24)" fg:x="341" fg:w="1"/><text x="85.7137%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.25%)</title><rect x="85.7143%" y="325" width="0.2506%" height="15" fill="rgb(250,187,7)" fg:x="342" fg:w="1"/><text x="85.9643%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.25%)</title><rect x="85.9649%" y="325" width="0.2506%" height="15" fill="rgb(228,66,33)" fg:x="343" fg:w="1"/><text x="86.2149%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.25%)</title><rect x="85.9649%" y="309" width="0.2506%" height="15" fill="rgb(234,215,21)" fg:x="343" fg:w="1"/><text x="86.2149%" y="319.50"></text></g><g><title>dns-tcp-network`inet::dns::nameserver::DNSNameserver::launch::_{{closure}} (21 samples, 5.26%)</title><rect x="81.2030%" y="341" width="5.2632%" height="15" fill="rgb(222,191,20)" fg:x="324" fg:w="21"/><text x="81.4530%" y="351.50">dns-tc..</text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.25%)</title><rect x="86.2155%" y="325" width="0.2506%" height="15" fill="rgb(245,79,54)" fg:x="344" fg:w="1"/><text x="86.4655%" y="335.50"></text></g><g><title>dns-tcp-network`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="86.4662%" y="325" width="0.2506%" height="15" fill="rgb(240,10,37)" fg:x="345" fg:w="1"/><text x="86.7162%" y="335.50"></text></g><g><title>dns-tcp-network`core::ptr::drop_in_place&lt;core::option::Option&lt;inet::udp::UdpControlBlock&gt;&gt; (1 samples, 0.25%)</title><rect x="86.7168%" y="309" width="0.2506%" height="15" fill="rgb(214,192,32)" fg:x="346" fg:w="1"/><text x="86.9668%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.25%)</title><rect x="86.7168%" y="293" width="0.2506%" height="15" fill="rgb(209,36,54)" fg:x="346" fg:w="1"/><text x="86.9668%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.25%)</title><rect x="86.7168%" y="277" width="0.2506%" height="15" fill="rgb(220,10,11)" fg:x="346" fg:w="1"/><text x="86.9668%" y="287.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::try_with_current (2 samples, 0.50%)</title><rect x="86.7168%" y="325" width="0.5013%" height="15" fill="rgb(221,106,17)" fg:x="346" fg:w="2"/><text x="86.9668%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.25%)</title><rect x="86.9674%" y="309" width="0.2506%" height="15" fill="rgb(251,142,44)" fg:x="347" fg:w="1"/><text x="87.2174%" y="319.50"></text></g><g><title>dns-tcp-network`inet::dns::resolver::_&lt;impl inet::dns::resolver::sealed::ToSocketAddrsPriv for (&amp;str,u16)&gt;::to_socket_addrs::_{{closure}} (4 samples, 1.00%)</title><rect x="86.4662%" y="341" width="1.0025%" height="15" fill="rgb(238,13,15)" fg:x="345" fg:w="4"/><text x="86.7162%" y="351.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::with_current (1 samples, 0.25%)</title><rect x="87.2180%" y="325" width="0.2506%" height="15" fill="rgb(208,107,27)" fg:x="348" fg:w="1"/><text x="87.4680%" y="335.50"></text></g><g><title>dns-tcp-network`inet::udp::_&lt;impl inet::ctx::IOContext&gt;::udp_send_to (1 samples, 0.25%)</title><rect x="87.2180%" y="309" width="0.2506%" height="15" fill="rgb(205,136,37)" fg:x="348" fg:w="1"/><text x="87.4680%" y="319.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_ip_packet (1 samples, 0.25%)</title><rect x="87.2180%" y="293" width="0.2506%" height="15" fill="rgb(250,205,27)" fg:x="348" fg:w="1"/><text x="87.4680%" y="303.50"></text></g><g><title>dns-tcp-network`inet::arp::_&lt;impl inet::ctx::IOContext&gt;::send_lan_local_ip_packet (1 samples, 0.25%)</title><rect x="87.2180%" y="277" width="0.2506%" height="15" fill="rgb(210,80,43)" fg:x="348" fg:w="1"/><text x="87.4680%" y="287.50"></text></g><g><title>dns-tcp-network`inet::interface::Interface::send (1 samples, 0.25%)</title><rect x="87.2180%" y="261" width="0.2506%" height="15" fill="rgb(247,160,36)" fg:x="348" fg:w="1"/><text x="87.4680%" y="271.50"></text></g><g><title>dns-tcp-network`inet::libpcap::capture (1 samples, 0.25%)</title><rect x="87.2180%" y="245" width="0.2506%" height="15" fill="rgb(234,13,49)" fg:x="348" fg:w="1"/><text x="87.4680%" y="255.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::LibPcapDeamon as inet::libpcap::PcapSubscriber&gt;::capture (1 samples, 0.25%)</title><rect x="87.2180%" y="229" width="0.2506%" height="15" fill="rgb(234,122,0)" fg:x="348" fg:w="1"/><text x="87.4680%" y="239.50"></text></g><g><title>dns-tcp-network`&lt;inet_pcap::blocks::EPB as bytepack::ToBytestream&gt;::to_bytestream (1 samples, 0.25%)</title><rect x="87.2180%" y="213" width="0.2506%" height="15" fill="rgb(207,146,38)" fg:x="348" fg:w="1"/><text x="87.4680%" y="223.50"></text></g><g><title>dns-tcp-network`std::io::Write::write_all (1 samples, 0.25%)</title><rect x="87.2180%" y="197" width="0.2506%" height="15" fill="rgb(207,177,25)" fg:x="348" fg:w="1"/><text x="87.4680%" y="207.50"></text></g><g><title>dns-tcp-network`&lt;bytepack::BytestreamWriter as std::io::Write&gt;::write (1 samples, 0.25%)</title><rect x="87.2180%" y="181" width="0.2506%" height="15" fill="rgb(211,178,42)" fg:x="348" fg:w="1"/><text x="87.4680%" y="191.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="87.2180%" y="165" width="0.2506%" height="15" fill="rgb(230,69,54)" fg:x="348" fg:w="1"/><text x="87.4680%" y="175.50"></text></g><g><title>dns-tcp-network`alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="87.2180%" y="149" width="0.2506%" height="15" fill="rgb(214,135,41)" fg:x="348" fg:w="1"/><text x="87.4680%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.25%)</title><rect x="87.2180%" y="133" width="0.2506%" height="15" fill="rgb(237,67,25)" fg:x="348" fg:w="1"/><text x="87.4680%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.25%)</title><rect x="87.2180%" y="117" width="0.2506%" height="15" fill="rgb(222,189,50)" fg:x="348" fg:w="1"/><text x="87.4680%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.25%)</title><rect x="87.2180%" y="101" width="0.2506%" height="15" fill="rgb(245,148,34)" fg:x="348" fg:w="1"/><text x="87.4680%" y="111.50"></text></g><g><title>dns-tcp-network`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="87.4687%" y="309" width="0.2506%" height="15" fill="rgb(222,29,6)" fg:x="349" fg:w="1"/><text x="87.7187%" y="319.50"></text></g><g><title>dns-tcp-network`&lt;des::time::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.25%)</title><rect x="87.4687%" y="293" width="0.2506%" height="15" fill="rgb(221,189,43)" fg:x="349" fg:w="1"/><text x="87.7187%" y="303.50"></text></g><g><title>dns-tcp-network`des::time::driver::Driver::with_current (1 samples, 0.25%)</title><rect x="87.4687%" y="277" width="0.2506%" height="15" fill="rgb(207,36,27)" fg:x="349" fg:w="1"/><text x="87.7187%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.25%)</title><rect x="87.4687%" y="261" width="0.2506%" height="15" fill="rgb(217,90,24)" fg:x="349" fg:w="1"/><text x="87.7187%" y="271.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::try_with_current (1 samples, 0.25%)</title><rect x="87.7193%" y="309" width="0.2506%" height="15" fill="rgb(224,66,35)" fg:x="350" fg:w="1"/><text x="87.9693%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.25%)</title><rect x="87.7193%" y="293" width="0.2506%" height="15" fill="rgb(221,13,50)" fg:x="350" fg:w="1"/><text x="87.9693%" y="303.50"></text></g><g><title>dns-tcp-network`inet::dns::resolver::_&lt;impl inet::dns::resolver::sealed::ToSocketAddrsPriv for &amp;str&gt;::to_socket_addrs::_{{closure}} (1 samples, 0.25%)</title><rect x="87.9699%" y="309" width="0.2506%" height="15" fill="rgb(236,68,49)" fg:x="351" fg:w="1"/><text x="88.2199%" y="319.50"></text></g><g><title>dns-tcp-network`core::net::parser::Parser::read_ipv4_addr (1 samples, 0.25%)</title><rect x="87.9699%" y="293" width="0.2506%" height="15" fill="rgb(229,146,28)" fg:x="351" fg:w="1"/><text x="88.2199%" y="303.50"></text></g><g><title>dns-tcp-network`inet::dns::resolver::_&lt;impl inet::dns::resolver::sealed::ToSocketAddrsPriv for (alloc::string::String,u16)&gt;::to_socket_addrs::_{{closure}} (4 samples, 1.00%)</title><rect x="87.4687%" y="341" width="1.0025%" height="15" fill="rgb(225,31,38)" fg:x="349" fg:w="4"/><text x="87.7187%" y="351.50"></text></g><g><title>dns-tcp-network`inet::dns::resolver::_&lt;impl inet::dns::resolver::sealed::ToSocketAddrsPriv for (&amp;str,u16)&gt;::to_socket_addrs::_{{closure}} (4 samples, 1.00%)</title><rect x="87.4687%" y="325" width="1.0025%" height="15" fill="rgb(250,208,3)" fg:x="349" fg:w="4"/><text x="87.7187%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.25%)</title><rect x="88.2206%" y="309" width="0.2506%" height="15" fill="rgb(246,54,23)" fg:x="352" fg:w="1"/><text x="88.4706%" y="319.50"></text></g><g><title>dns-tcp-network`inet_rip::RipRoutingDeamon::deploy::_{{closure}} (1 samples, 0.25%)</title><rect x="88.4712%" y="341" width="0.2506%" height="15" fill="rgb(243,76,11)" fg:x="353" fg:w="1"/><text x="88.7212%" y="351.50"></text></g><g><title>dns-tcp-network`&lt;inet_rip::pkt::RipPacket as bytepack::FromBytestream&gt;::from_bytestream (1 samples, 0.25%)</title><rect x="88.4712%" y="325" width="0.2506%" height="15" fill="rgb(245,21,50)" fg:x="353" fg:w="1"/><text x="88.7212%" y="335.50"></text></g><g><title>dns-tcp-network`std::io::default_read_exact (1 samples, 0.25%)</title><rect x="88.4712%" y="309" width="0.2506%" height="15" fill="rgb(228,9,43)" fg:x="353" fg:w="1"/><text x="88.7212%" y="319.50"></text></g><g><title>dns-tcp-network`tokio::task::spawn::spawn (1 samples, 0.25%)</title><rect x="88.7218%" y="341" width="0.2506%" height="15" fill="rgb(208,100,47)" fg:x="354" fg:w="1"/><text x="88.9718%" y="351.50"></text></g><g><title>dns-tcp-network`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (1 samples, 0.25%)</title><rect x="88.7218%" y="325" width="0.2506%" height="15" fill="rgb(232,26,8)" fg:x="354" fg:w="1"/><text x="88.9718%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.25%)</title><rect x="88.7218%" y="309" width="0.2506%" height="15" fill="rgb(216,166,38)" fg:x="354" fg:w="1"/><text x="88.9718%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.25%)</title><rect x="88.9724%" y="341" width="0.2506%" height="15" fill="rgb(251,202,51)" fg:x="355" fg:w="1"/><text x="89.2224%" y="351.50"></text></g><g><title>dns-tcp-network`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (47 samples, 11.78%)</title><rect x="77.6942%" y="373" width="11.7794%" height="15" fill="rgb(254,216,34)" fg:x="310" fg:w="47"/><text x="77.9442%" y="383.50">dns-tcp-network`t..</text></g><g><title>dns-tcp-network`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (47 samples, 11.78%)</title><rect x="77.6942%" y="357" width="11.7794%" height="15" fill="rgb(251,32,27)" fg:x="310" fg:w="47"/><text x="77.9442%" y="367.50">dns-tcp-network`t..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.25%)</title><rect x="89.2231%" y="341" width="0.2506%" height="15" fill="rgb(208,127,28)" fg:x="356" fg:w="1"/><text x="89.4731%" y="351.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::Context::run_task (51 samples, 12.78%)</title><rect x="76.9424%" y="405" width="12.7820%" height="15" fill="rgb(224,137,22)" fg:x="307" fg:w="51"/><text x="77.1924%" y="415.50">dns-tcp-network`tok..</text></g><g><title>dns-tcp-network`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (48 samples, 12.03%)</title><rect x="77.6942%" y="389" width="12.0301%" height="15" fill="rgb(254,70,32)" fg:x="310" fg:w="48"/><text x="77.9442%" y="399.50">dns-tcp-network`to..</text></g><g><title>dns-tcp-network`tokio::runtime::task::state::State::transition_to_idle (1 samples, 0.25%)</title><rect x="89.4737%" y="373" width="0.2506%" height="15" fill="rgb(229,75,37)" fg:x="357" fg:w="1"/><text x="89.7237%" y="383.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::Handle::pop (2 samples, 0.50%)</title><rect x="89.7243%" y="405" width="0.5013%" height="15" fill="rgb(252,64,23)" fg:x="358" fg:w="2"/><text x="89.9743%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.25%)</title><rect x="89.9749%" y="389" width="0.2506%" height="15" fill="rgb(232,162,48)" fg:x="359" fg:w="1"/><text x="90.2249%" y="399.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::did_defer_tasks (2 samples, 0.50%)</title><rect x="90.2256%" y="405" width="0.5013%" height="15" fill="rgb(246,160,12)" fg:x="360" fg:w="2"/><text x="90.4756%" y="415.50"></text></g><g><title>dns-tcp-network`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (93 samples, 23.31%)</title><rect x="67.6692%" y="421" width="23.3083%" height="15" fill="rgb(247,166,0)" fg:x="270" fg:w="93"/><text x="67.9192%" y="431.50">dns-tcp-network`tokio::macros::scoped..</text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.25%)</title><rect x="90.7268%" y="405" width="0.2506%" height="15" fill="rgb(249,219,21)" fg:x="362" fg:w="1"/><text x="90.9768%" y="415.50"></text></g><g><title>dns-tcp-network`DYLD-STUB$$pthread_mutex_lock (1 samples, 0.25%)</title><rect x="90.9774%" y="405" width="0.2506%" height="15" fill="rgb(205,209,3)" fg:x="363" fg:w="1"/><text x="91.2274%" y="415.50"></text></g><g><title>dns-tcp-network`tokio::runtime::context::enter_runtime (2 samples, 0.50%)</title><rect x="90.9774%" y="421" width="0.5013%" height="15" fill="rgb(243,44,1)" fg:x="363" fg:w="2"/><text x="91.2274%" y="431.50"></text></g><g><title>dns-tcp-network`tokio::util::rand::RngSeedGenerator::next_seed (1 samples, 0.25%)</title><rect x="91.2281%" y="405" width="0.2506%" height="15" fill="rgb(206,159,16)" fg:x="364" fg:w="1"/><text x="91.4781%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.25%)</title><rect x="91.2281%" y="389" width="0.2506%" height="15" fill="rgb(244,77,30)" fg:x="364" fg:w="1"/><text x="91.4781%" y="399.50"></text></g><g><title>dns-tcp-network`tokio::runtime::handle::Handle::enter (2 samples, 0.50%)</title><rect x="91.4787%" y="421" width="0.5013%" height="15" fill="rgb(218,69,12)" fg:x="365" fg:w="2"/><text x="91.7287%" y="431.50"></text></g><g><title>dns-tcp-network`DYLD-STUB$$pthread_mutex_lock (1 samples, 0.25%)</title><rect x="91.7293%" y="405" width="0.2506%" height="15" fill="rgb(212,87,7)" fg:x="366" fg:w="1"/><text x="91.9793%" y="415.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::Context::enter (1 samples, 0.25%)</title><rect x="91.9799%" y="421" width="0.2506%" height="15" fill="rgb(245,114,25)" fg:x="367" fg:w="1"/><text x="92.2299%" y="431.50"></text></g><g><title>dns-tcp-network`tokio::runtime::scheduler::current_thread::Handle::reset_woken (2 samples, 0.50%)</title><rect x="92.2306%" y="421" width="0.5013%" height="15" fill="rgb(210,61,42)" fg:x="368" fg:w="2"/><text x="92.4806%" y="431.50"></text></g><g><title>dns-tcp-network`des::net::runtime::events::_&lt;impl des::net::module::reference::ModuleRef&gt;::handle_message (294 samples, 73.68%)</title><rect x="19.7995%" y="469" width="73.6842%" height="15" fill="rgb(211,52,33)" fg:x="79" fg:w="294"/><text x="20.0495%" y="479.50">dns-tcp-network`des::net::runtime::events::_&lt;impl des::net::module::reference::ModuleRef&gt;::handle_message</text></g><g><title>dns-tcp-network`des::net::runtime::events::_&lt;impl des::net::module::reference::ModuleRef&gt;::run_without_event (118 samples, 29.57%)</title><rect x="63.9098%" y="453" width="29.5739%" height="15" fill="rgb(234,58,33)" fg:x="255" fg:w="118"/><text x="64.1598%" y="463.50">dns-tcp-network`des::net::runtime::events::_&lt;imp..</text></g><g><title>dns-tcp-network`tokio::runtime::runtime::Runtime::block_on (114 samples, 28.57%)</title><rect x="64.9123%" y="437" width="28.5714%" height="15" fill="rgb(220,115,36)" fg:x="259" fg:w="114"/><text x="65.1623%" y="447.50">dns-tcp-network`tokio::runtime::runtime::Runti..</text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.75%)</title><rect x="92.7318%" y="421" width="0.7519%" height="15" fill="rgb(243,153,54)" fg:x="370" fg:w="3"/><text x="92.9818%" y="431.50"></text></g><g><title>dns-tcp-network`inet::ctx::IOContext::swap_in (1 samples, 0.25%)</title><rect x="93.7343%" y="437" width="0.2506%" height="15" fill="rgb(251,47,18)" fg:x="374" fg:w="1"/><text x="93.9843%" y="447.50"></text></g><g><title>dns-tcp-network`des::net::runtime::events::_&lt;impl des::net::module::reference::ModuleRef&gt;::plugin_downstream (5 samples, 1.25%)</title><rect x="93.4837%" y="469" width="1.2531%" height="15" fill="rgb(242,102,42)" fg:x="373" fg:w="5"/><text x="93.7337%" y="479.50"></text></g><g><title>dns-tcp-network`&lt;inet::plugin::IOPlugin as des::net::plugin::Plugin&gt;::event_end (4 samples, 1.00%)</title><rect x="93.7343%" y="453" width="1.0025%" height="15" fill="rgb(234,31,38)" fg:x="374" fg:w="4"/><text x="93.9843%" y="463.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.75%)</title><rect x="93.9850%" y="437" width="0.7519%" height="15" fill="rgb(221,117,51)" fg:x="375" fg:w="3"/><text x="94.2350%" y="447.50"></text></g><g><title>dns-tcp-network`&lt;des::net::runtime::events::NetEvents as des::runtime::event::types::EventSet&lt;des::net::runtime::NetworkApplication&lt;A&gt;&gt;&gt;::handle (367 samples, 91.98%)</title><rect x="3.2581%" y="485" width="91.9799%" height="15" fill="rgb(212,20,18)" fg:x="13" fg:w="367"/><text x="3.5081%" y="495.50">dns-tcp-network`&lt;des::net::runtime::events::NetEvents as des::runtime::event::types::EventSet&lt;des::net::runtime::NetworkApplication&lt;A&gt;&gt;&gt;::handle</text></g><g><title>dns-tcp-network`des::time::driver::Driver::set (2 samples, 0.50%)</title><rect x="94.7368%" y="469" width="0.5013%" height="15" fill="rgb(245,133,36)" fg:x="378" fg:w="2"/><text x="94.9868%" y="479.50"></text></g><g><title>dns-tcp-network`des::net::module::reference::ModuleRef::scope_token (2 samples, 0.50%)</title><rect x="95.2381%" y="485" width="0.5013%" height="15" fill="rgb(212,6,19)" fg:x="380" fg:w="2"/><text x="95.4881%" y="495.50"></text></g><g><title>dns-tcp-network`&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.25%)</title><rect x="96.7419%" y="469" width="0.2506%" height="15" fill="rgb(218,1,36)" fg:x="386" fg:w="1"/><text x="96.9919%" y="479.50"></text></g><g><title>dns-tcp-network`des::runtime::event::event_set::cqueue_impl::FutureEventSet&lt;A&gt;::fetch_next (6 samples, 1.50%)</title><rect x="95.7393%" y="485" width="1.5038%" height="15" fill="rgb(246,84,54)" fg:x="382" fg:w="6"/><text x="95.9893%" y="495.50"></text></g><g><title>dns-tcp-network`des_cqueue::stable::alloc::CQueueLLAllocator::deallocate (1 samples, 0.25%)</title><rect x="96.9925%" y="469" width="0.2506%" height="15" fill="rgb(242,110,6)" fg:x="387" fg:w="1"/><text x="97.2425%" y="479.50"></text></g><g><title>dns-tcp-network`des::runtime::limit::RuntimeLimit::applies (4 samples, 1.00%)</title><rect x="97.2431%" y="485" width="1.0025%" height="15" fill="rgb(214,47,5)" fg:x="388" fg:w="4"/><text x="97.4931%" y="495.50"></text></g><g><title>dns-tcp-network`des::time::SimTime::from_duration (1 samples, 0.25%)</title><rect x="98.2456%" y="485" width="0.2506%" height="15" fill="rgb(218,159,25)" fg:x="392" fg:w="1"/><text x="98.4956%" y="495.50"></text></g><g><title>dns-tcp-network`des::time::SimTime::set_now (1 samples, 0.25%)</title><rect x="98.4962%" y="485" width="0.2506%" height="15" fill="rgb(215,211,28)" fg:x="393" fg:w="1"/><text x="98.7462%" y="495.50"></text></g><g><title>dns-tcp-network`des::runtime::Runtime&lt;A&gt;::run (389 samples, 97.49%)</title><rect x="1.5038%" y="501" width="97.4937%" height="15" fill="rgb(238,59,32)" fg:x="6" fg:w="389"/><text x="1.7538%" y="511.50">dns-tcp-network`des::runtime::Runtime&lt;A&gt;::run</text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_wrlock (1 samples, 0.25%)</title><rect x="98.7469%" y="485" width="0.2506%" height="15" fill="rgb(226,82,3)" fg:x="394" fg:w="1"/><text x="98.9969%" y="495.50"></text></g><g><title>dns-tcp-network`des::runtime::builder::Builder::build (1 samples, 0.25%)</title><rect x="98.9975%" y="501" width="0.2506%" height="15" fill="rgb(240,164,32)" fg:x="395" fg:w="1"/><text x="99.2475%" y="511.50"></text></g><g><title>dns-tcp-network`&lt;des::runtime::bench::Profiler as core::default::Default&gt;::default (1 samples, 0.25%)</title><rect x="98.9975%" y="485" width="0.2506%" height="15" fill="rgb(232,46,7)" fg:x="395" fg:w="1"/><text x="99.2475%" y="495.50"></text></g><g><title>dns-tcp-network`&lt;des::runtime::bench::ProfilerEnv as core::default::Default&gt;::default (1 samples, 0.25%)</title><rect x="98.9975%" y="469" width="0.2506%" height="15" fill="rgb(229,129,53)" fg:x="395" fg:w="1"/><text x="99.2475%" y="479.50"></text></g><g><title>dns-tcp-network`hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.25%)</title><rect x="98.9975%" y="453" width="0.2506%" height="15" fill="rgb(234,188,29)" fg:x="395" fg:w="1"/><text x="99.2475%" y="463.50"></text></g><g><title>dyld`start (398 samples, 99.75%)</title><rect x="0.0000%" y="597" width="99.7494%" height="15" fill="rgb(246,141,4)" fg:x="0" fg:w="398"/><text x="0.2500%" y="607.50">dyld`start</text></g><g><title>dns-tcp-network`main (398 samples, 99.75%)</title><rect x="0.0000%" y="581" width="99.7494%" height="15" fill="rgb(229,23,39)" fg:x="0" fg:w="398"/><text x="0.2500%" y="591.50">dns-tcp-network`main</text></g><g><title>dns-tcp-network`std::rt::lang_start_internal (398 samples, 99.75%)</title><rect x="0.0000%" y="565" width="99.7494%" height="15" fill="rgb(206,12,3)" fg:x="0" fg:w="398"/><text x="0.2500%" y="575.50">dns-tcp-network`std::rt::lang_start_internal</text></g><g><title>dns-tcp-network`std::rt::lang_start::_{{closure}} (398 samples, 99.75%)</title><rect x="0.0000%" y="549" width="99.7494%" height="15" fill="rgb(252,226,20)" fg:x="0" fg:w="398"/><text x="0.2500%" y="559.50">dns-tcp-network`std::rt::lang_start::_{{closure}}</text></g><g><title>dns-tcp-network`std::sys_common::backtrace::__rust_begin_short_backtrace (398 samples, 99.75%)</title><rect x="0.0000%" y="533" width="99.7494%" height="15" fill="rgb(216,123,35)" fg:x="0" fg:w="398"/><text x="0.2500%" y="543.50">dns-tcp-network`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dns-tcp-network`dns_tcp_network::main (397 samples, 99.50%)</title><rect x="0.2506%" y="517" width="99.4987%" height="15" fill="rgb(212,68,40)" fg:x="1" fg:w="397"/><text x="0.5006%" y="527.50">dns-tcp-network`dns_tcp_network::main</text></g><g><title>dns-tcp-network`des::runtime::event::event_set::cqueue_impl::FutureEventSet&lt;A&gt;::fetch_next (2 samples, 0.50%)</title><rect x="99.2481%" y="501" width="0.5013%" height="15" fill="rgb(254,125,32)" fg:x="396" fg:w="2"/><text x="99.4981%" y="511.50"></text></g><g><title>all (399 samples, 100%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(253,97,22)" fg:x="0" fg:w="399"/><text x="0.2500%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.25%)</title><rect x="99.7494%" y="597" width="0.2506%" height="15" fill="rgb(241,101,14)" fg:x="398" fg:w="1"/><text x="99.9994%" y="607.50"></text></g></svg></svg>