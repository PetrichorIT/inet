module Node {
    gates {
        in @input,
        out @output,
    }
}

module Switch {
    gates {
        in[5] @input,
        out[5] @output,

        gwin @input,
        gwout @output,
    }
}

module Router {
    gates {
        lan_in @input,
        lan_out @output,

        in[5] @input,
        out[5] @output,
    }
}

module BgpA {
    gates {
        in @input,
        out @output,

        b_in @input,
        b_out @output,
    }
}


module NetA {
    gates {
        out,
        in,
    }

    submodules {
        edge: BgpA,
        router: Router,
        switch: Switch,
        node[5]: Node
    }

    connections {
        edge/b_out --> out,
        edge/b_in <-- in,

        node/out --> L --> switch/in,
        node/in <-- L <-- switch/out,

        switch/gwout --> L --> router/lan_in,
        switch/gwin <-- L <-- router/lan_out,

        router/out[0] --> L --> edge/in,
        router/in[0] <-- L <-- edge/out,

    }
}


module B {
    gates {
        a_in @input,
        a_out @output,
        c_in @input,
        c_out @output,
    }
}

module C {
    gates {
        b_in @input,
        b_out @output,
        d_in @input,
        d_out @output,
    }
}

module D {
    gates {
        in @input,
        out @output,
    }
}

link L {
    latency: 0.01,
    bitrate: 1000000,
    jitter: 0.0
}

module Main {
    submodules {
        a: NetA,
        b: B,
        c: C,
        d: D,
    }
    connections {
        a/out --> L --> b/a_in,
        a/in <-- L <-- b/a_out,

        c/b_out --> L --> b/c_in,
        c/b_in <-- L <-- b/c_out,

        c/d_out --> L --> d/in,
        c/d_in <-- L <-- d/out,
    }
}

entry Main;